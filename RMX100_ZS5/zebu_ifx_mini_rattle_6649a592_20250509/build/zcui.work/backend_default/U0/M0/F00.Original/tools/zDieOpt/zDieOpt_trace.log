#   step decisionMaking : Starting
#   step INIT : Starting
#   step dieBuildDB : Logical FPGA: U0_M0_F0 ; Physical FPGA: U0/M0/F00
#   step FWC : Configuring for Virtex 8, fast waveform capture gen2
#   step QIWC : Configuring for Virtex 8
#   step dieBuildDB : Target Product: zs5
#   step INIT : Done in     elapsed:0.6 s    user:0.6 s      system:0 s     %cpu:105.26       load:2.03       fm:859094 m    vm:11937 m       vm:+0 m    um:11112 m       um:+0 m
#   step dieBuildDB : Reading toe file: /slowfs/us01dwslow023/fpga/lianghao/zebu_install/ZEBU/VCS2021.09.2.ZEBU.B4/07052024/INSTALL/ZEBU/zebu/S-2021.09-2-TZ-20240507_Full64/etc/partitioningModel/zs5_xcvup_12c_19_v2_toe.xml
#   step DIE_BUILD : Generate zdo Option
#   step ZDO DM Build : Starting
#   step ZDO_CONSTRAINT_MGR PARSE : Starting
#   step ZDO_RSRC : U0 M0 F0 L0
#   step ZDO_RSRC : LUT:       1021500 = (1021500 - 0)
#   step ZDO_RSRC : LUT6:      1021500 = (1021500 - 0)
#   step ZDO_RSRC : REG:       2043000 = (2043000 - 0)
#   step ZDO_RSRC : RAMLUT:    161250 = (161250 - 0)
#   step ZDO_RSRC : RAM:       539 = (539 - 0)
#   step ZDO_RSRC : DSP:       960 = (960 - 0)
#   step ZDO_RSRC : URAM:      80 = (80 - 0)
#   step ZDO_RSRC : U0 M0 F0 L1
#   step ZDO_RSRC : LUT:       1021500 = (1021500 - 0)
#   step ZDO_RSRC : LUT6:      1021500 = (1021500 - 0)
#   step ZDO_RSRC : REG:       2043000 = (2043000 - 0)
#   step ZDO_RSRC : RAMLUT:    161250 = (161250 - 0)
#   step ZDO_RSRC : RAM:       539 = (539 - 0)
#   step ZDO_RSRC : DSP:       960 = (960 - 0)
#   step ZDO_RSRC : URAM:      80 = (80 - 0)
#   step ZDO_RSRC : U0 M0 F0 L2
#   step ZDO_RSRC : LUT:       1021500 = (1021500 - 0)
#   step ZDO_RSRC : LUT6:      1021500 = (1021500 - 0)
#   step ZDO_RSRC : REG:       2043000 = (2043000 - 0)
#   step ZDO_RSRC : RAMLUT:    161250 = (161250 - 0)
#   step ZDO_RSRC : RAM:       503 = (539 - 36)
#   step ZDO_RSRC : DSP:       936 = (960 - 24)
#   step ZDO_RSRC : URAM:      80 = (80 - 0)
#   step ZDO_RSRC : U0 M0 F0 L3
#   step ZDO_RSRC : LUT:       1021500 = (1021500 - 0)
#   step ZDO_RSRC : LUT6:      1021500 = (1021500 - 0)
#   step ZDO_RSRC : REG:       2043000 = (2043000 - 0)
#   step ZDO_RSRC : RAMLUT:    161250 = (161250 - 0)
#   step ZDO_RSRC : RAM:       539 = (539 - 0)
#   step ZDO_RSRC : DSP:       960 = (960 - 0)
#   step ZDO_RSRC : URAM:      80 = (80 - 0)
#   step ZDO_DEVICE : Fpgalet Report:
#   step ZDO_DEVICE : |                                   |
#   step ZDO_DEVICE : |             part_SLR3             |
#   step ZDO_DEVICE : |  BBox:[   0, 915] - ( 705,1220)   |
#   step ZDO_DEVICE : |        shell flpins:     0        |
#   step ZDO_DEVICE : |                                   |
#   step ZDO_DEVICE : +- N    0/   0 -- S    0/   0 -- V     0 -+
#   step ZDO_DEVICE : |                                   |
#   step ZDO_DEVICE : |             part_SLR2             |
#   step ZDO_DEVICE : |  BBox:[   0, 610] - ( 705, 915)   |
#   step ZDO_DEVICE : |        shell flpins:     0        |
#   step ZDO_DEVICE : |                                   |
#   step ZDO_DEVICE : +- N    0/   0 -- S    0/   0 -- V     0 -+
#   step ZDO_DEVICE : |                                   |
#   step ZDO_DEVICE : |             part_SLR1             |
#   step ZDO_DEVICE : |  BBox:[   0, 305] - ( 705, 610)   |
#   step ZDO_DEVICE : |        shell flpins:     0        |
#   step ZDO_DEVICE : |                                   |
#   step ZDO_DEVICE : +- N    0/   0 -- S    0/   0 -- V     0 -+
#   step ZDO_DEVICE : |                                   |
#   step ZDO_DEVICE : |             part_SLR0             |
#   step ZDO_DEVICE : |  BBox:[   0,   0] - ( 705, 305)   |
#   step ZDO_DEVICE : |        shell flpins:     0        |
#   step ZDO_DEVICE : |                                   |
#   step ZDO_DEVICE : (Direction[N|S|E|W] #NormalFlPins / #BypassFlPins)
#   step ZDO_CONSTRAINT_MGR : Product type = zs5, virtex type = V8
#   step ZDO_CONSTRAINT_MGR : Setup resource types with productType zs5
#   step zmp_Resources : setTargetType: Set Arch/Fpga type to zs5/V8
#   step zmp_Resources : setNumType: Arch/Fpga type is zs5/V8
#   step zmp_Resources : setNumType: Set 21 resources
#   step zmp_Resources : # of  all types = 21
#   step zmp_Resources : # of used types = 21
#   step zmp_Resources : Res                 Name:  ZBNFResources-Id / ZMP::Resources-Id
#   step zmp_Resources : Res                  LUT:                 0 /                 0
#   step zmp_Resources : Res                 LUT6:                 1 /                 1
#   step zmp_Resources : Res                  RAM:                 2 /                 2
#   step zmp_Resources : Res                 URAM:                 3 /                 3
#   step zmp_Resources : Res                  REG:                 4 /                 4
#   step zmp_Resources : Res                  DSP:                 5 /                 5
#   step zmp_Resources : Res               RAMLUT:                 6 /                 6
#   step zmp_Resources : Res           FWC_IP_NUM:                 7 /                 7
#   step zmp_Resources : Res          FWC_IP_BITS:                 8 /                 8
#   step zmp_Resources : Res         QIWC_IP_BITS:                 9 /                 9
#   step zmp_Resources : Res        READ_PORT_IPS:                10 /                10
#   step zmp_Resources : Res       READ_PORT_BITS:                11 /                11
#   step zmp_Resources : Res       WRITE_PORT_IPS:                12 /                12
#   step zmp_Resources : Res      WRITE_PORT_BITS:                13 /                13
#   step zmp_Resources : Res         ZC_TRACE_BIT:                14 /                14
#   step zmp_Resources : Res   ZCEI_MESSAGE_INPUT:                15 /                15
#   step zmp_Resources : Res  ZCEI_MESSAGE_OUTPUT:                16 /                16
#   step zmp_Resources : Res         FW_RESOURCES:                17 /                17
#   step zmp_Resources : Res              ZPRD_BB:                18 /                18
#   step zmp_Resources : Res               ZFORCE:                19 /                19
#   step zmp_Resources : Res                ZVIEW:                20 /                20
#   step ZDO_TCLMGR : Parsing tcl file tools/zDieOpt/script.tcl
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.F00_ClockGen} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.F00_Terminal} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.F01_SocketIn} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_0} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_1} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_10} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_100} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_101} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_102} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_103} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_104} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_105} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_106} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_107} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_108} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_109} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_11} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_110} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_111} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_112} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_113} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_114} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_115} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_116} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_117} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_118} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_119} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_12} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_120} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_121} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_122} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_123} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_124} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_125} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_126} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_127} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_128} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_129} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_13} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_130} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_131} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_132} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_133} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_134} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_135} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_136} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_137} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_138} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_139} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_14} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_140} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_141} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_142} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_143} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_144} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_145} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_146} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_147} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_148} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_149} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_15} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_150} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_151} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_152} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_153} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_154} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_155} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_156} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_157} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_158} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_159} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_16} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_160} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_161} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_162} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_163} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_164} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_165} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_166} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_167} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_168} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_169} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_17} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_170} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_171} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_172} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_173} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_174} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_175} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_176} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_177} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_178} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_179} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_18} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_180} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_181} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_182} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_183} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_184} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_185} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_186} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_187} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_188} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_189} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_19} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_190} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_191} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_192} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_193} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_194} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_195} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_196} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_197} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_198} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_199} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_2} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_20} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_200} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_201} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_202} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_203} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_204} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_205} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_206} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_207} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_208} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_209} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_21} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_210} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_211} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_212} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_213} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_214} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_22} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_23} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_24} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_25} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_26} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_27} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_28} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_29} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_3} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_30} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_31} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_32} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_33} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_34} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_35} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_36} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_37} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_38} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_39} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_4} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_40} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_41} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_42} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_43} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_44} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_45} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_46} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_47} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_48} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_49} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_5} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_50} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_51} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_52} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_53} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_54} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_55} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_56} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_57} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_58} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_59} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_6} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_60} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_61} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_62} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_63} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_64} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_65} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_66} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_67} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_68} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_69} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_7} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_70} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_71} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_72} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_73} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_74} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_75} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_76} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_77} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_78} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_79} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_8} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_80} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_81} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_82} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_83} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_84} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_85} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_86} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_87} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_88} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_89} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_9} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_90} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_91} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_92} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_93} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_94} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_95} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_96} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_97} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_98} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdIceCtrl_99} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.ts_runman_0.ts_runman} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.ts_runman_1.ts_runman} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.ts_runman_2.ts_runman} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.ts_runman_3.ts_runman} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.ts_runman_4.ts_runman} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.ts_runman_5.ts_runman} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.ts_runman_6.ts_runman} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.ts_runman_7.ts_runman} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.ts_runman_8.ts_runman} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.zebu_time_capture.zpl_vcc_fm_pclk_en} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.zebu_ts_g_ready_prd_mid_zpl_box_is.rm_ctrl} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.ts_min_delay.ts_min2_0} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.ts_min_delay.ts_min2_1} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.ts_min_delay.ts_min2_2} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.ts_min_delay.ts_min2_3} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.ts_min_delay.ts_min2_4} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.ts_min_delay.ts_min2_5} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.ts_min_no_tol_delay.ts_min2_0} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.ts_min_no_tol_delay.ts_min2_1} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.ts_min_no_tol_delay.ts_min2_2} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.ts_min_no_tol_delay.ts_min2_3} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.ts_min_no_tol_delay.ts_min2_4} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.ts_min_no_tol_delay.ts_min2_5} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.ts_min_no_tol_delay.ts_min2_6} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.ts_min_no_tol_delay.ts_min2_7} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.ts_min_no_tol_delay.ts_min2_8} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.ts_min_of_min.ts_min2} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.ts_min_plus_tol.ts_rtl_clock_tolerance} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.zcgAnd_dclk_negedge_ready[0]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.zcgAnd_dclk_negedge_ready[1]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.zcgAnd_dclk_posedge_ready[0]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.zcgAnd_dclk_posedge_ready[1]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.zpl_gnd_cdp_msg_to_sw[0]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.zpl_gnd_cdp_msg_to_sw[1]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.zpl_gnd_cdp_reconfig_done} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.zpl_gnd_dve_reg_delta} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.zpl_gnd_ex_lite_mode_en} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.zpl_gnd_fm_revert_mode_pa} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.zpl_gnd_fm_revert_mode_wb} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.zpl_gnd_force_pclk_stop_mode} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.zpl_gnd_mcpdelay_cycles[0]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.zpl_gnd_mcpdelay_cycles[1]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.zpl_gnd_mcpdelay_cycles[2]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.zpl_gnd_mcpdelay_cycles[3]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.zpl_gnd_mcpdelay_cycles[4]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.zpl_gnd_mcpdelay_cycles[5]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.zpl_gnd_mcpdelay_cycles[6]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.zpl_gnd_mcpdelay_cycles[7]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.zpl_gnd_mcpdelay_enable} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.zpl_gnd_mcpdelay_event} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.zpl_gnd_memx_refresh_error} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.zpl_gnd_memx_stop_clock} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.zpl_gnd_run_manager_done} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.zpl_iwo_pclk_mix_freemode} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.zpl_vcc_pclk_ready_freeze} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.zpl_vcc_ts_time_rdy} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.ddr4_ctrl_empty_64x256_0} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.dyn_trig_inst} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zkprctrl} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpad_bus_ins} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_ex_en} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_sampling_sel} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[0]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[10]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[11]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[12]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[13]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[14]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[15]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[16]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[17]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[18]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[19]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[1]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[20]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[21]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[22]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[23]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[24]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[25]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[26]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[27]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[28]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[29]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[2]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[30]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[31]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[32]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[33]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[34]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[35]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[36]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[37]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[38]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[39]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[3]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[40]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[41]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[42]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[43]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[44]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[45]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[46]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[47]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[48]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[49]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[4]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[50]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[51]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[52]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[53]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[54]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[55]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[56]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[57]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[58]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[59]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[5]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[60]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[61]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[62]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[63]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[6]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[7]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[8]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_tic_clk_counter_n[9]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[0]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[10]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[11]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[12]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[13]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[14]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[15]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[16]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[17]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[18]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[19]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[1]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[20]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[21]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[22]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[23]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[24]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[25]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[26]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[27]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[28]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[29]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[2]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[30]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[31]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[32]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[33]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[34]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[35]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[36]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[37]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[38]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[39]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[3]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[40]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[41]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[42]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[43]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[44]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[45]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[46]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[47]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[48]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[49]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[4]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[50]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[51]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[52]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[53]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[54]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[55]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[56]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[57]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[58]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[59]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[5]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[60]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[61]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[62]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[63]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[6]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[7]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[8]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_gnd_wc_ts_g_time_n[9]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwa_bitslice_xclk_phy_rdy} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwa_dsib_tready} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_srb_data_rd[0]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_srb_data_rd[10]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_srb_data_rd[11]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_srb_data_rd[12]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_srb_data_rd[13]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_srb_data_rd[14]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_srb_data_rd[15]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_srb_data_rd[16]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_srb_data_rd[17]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_srb_data_rd[18]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_srb_data_rd[19]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_srb_data_rd[1]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_srb_data_rd[20]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_srb_data_rd[21]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_srb_data_rd[22]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_srb_data_rd[23]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_srb_data_rd[24]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_srb_data_rd[25]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_srb_data_rd[26]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_srb_data_rd[27]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_srb_data_rd[28]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_srb_data_rd[29]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_srb_data_rd[2]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_srb_data_rd[30]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_srb_data_rd[31]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_srb_data_rd[3]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_srb_data_rd[4]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_srb_data_rd[5]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_srb_data_rd[6]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_srb_data_rd[7]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_srb_data_rd[8]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_srb_data_rd[9]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[0]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[100]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[101]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[102]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[103]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[104]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[105]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[106]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[107]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[108]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[109]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[10]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[110]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[111]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[112]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[113]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[114]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[115]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[116]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[117]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[118]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[119]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[11]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[120]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[121]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[122]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[123]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[124]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[125]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[126]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[127]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[128]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[129]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[12]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[130]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[131]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[132]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[133]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[134]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[135]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[136]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[137]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[138]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[139]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[13]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[140]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[141]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[142]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[143]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[144]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[145]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[146]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[147]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[148]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[149]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[14]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[150]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[151]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[152]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[153]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[154]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[155]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[156]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[157]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[158]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[159]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[15]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[160]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[161]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[162]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[163]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[164]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[165]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[166]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[167]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[168]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[169]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[16]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[170]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[171]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[172]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[173]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[174]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[175]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[176]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[177]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[178]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[179]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[17]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[180]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[181]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[182]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[183]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[184]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[185]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[186]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[187]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[188]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[189]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[18]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[190]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[191]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[192]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[193]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[194]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[195]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[196]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[197]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[198]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[199]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[19]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[1]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[200]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[201]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[202]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[203]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[204]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[205]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[206]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[207]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[208]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[209]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[20]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[210]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[211]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[212]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[213]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[214]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[215]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[216]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[217]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[218]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[219]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[21]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[220]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[221]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[222]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[223]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[224]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[225]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[226]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[227]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[228]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[229]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[22]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[230]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[231]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[232]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[233]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[234]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[235]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[236]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[237]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[238]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[239]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[23]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[240]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[241]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[242]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[243]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[244]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[245]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[246]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[247]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[248]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[249]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[24]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[250]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[251]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[252]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[253]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[254]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[255]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[25]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[26]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[27]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[28]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[29]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[2]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[30]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[31]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[32]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[33]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[34]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[35]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[36]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[37]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[38]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[39]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[3]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[40]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[41]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[42]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[43]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[44]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[45]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[46]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[47]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[48]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[49]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[4]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[50]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[51]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[52]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[53]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[54]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[55]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[56]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[57]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[58]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[59]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[5]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[60]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[61]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[62]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[63]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[64]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[65]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[66]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[67]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[68]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[69]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[6]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[70]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[71]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[72]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[73]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[74]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[75]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[76]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[77]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[78]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[79]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[7]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[80]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[81]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[82]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[83]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[84]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[85]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[86]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[87]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[88]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[89]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[8]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[90]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[91]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[92]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[93]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[94]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[95]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[96]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[97]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[98]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[99]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tdata[9]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tlast} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tsop} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_tvalid} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_twkeep[0]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_twkeep[1]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_twkeep[2]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_twkeep[3]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_twkeep[4]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_twkeep[5]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_twkeep[6]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_iwo_usib_twkeep[7]} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_vcc_bitslice_clkbus_rx_rdy} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_vcc_bitslice_clkbus_xclk_phy_rdy} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zpl_vcc_bitslice_sock_rdy} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.zwc_ip_clk_da} part_NoSLR
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdBox_U0_M0_F0} part_SLR1
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdBox_U0_M0_F0_0} part_SLR1
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdMsgCtrl_000} part_SLR1
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdMsgCtrl_000_0} part_SLR1
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdMsgCtrl_000_1} part_SLR1
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdMsgCtrl_000_2} part_SLR1
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdMsgCtrl_000_3} part_SLR1
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.prdbox_wrapper.prdMsgCtrl_000_4} part_SLR1
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.zcahsrash} part_SLR1
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.zebu_time_capture.zmsg_in_zebu_control_in_port} part_SLR1
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.zebu_time_capture.zmsg_in_zemi_control_in_port} part_SLR1
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.zebu_time_capture.zmsg_out_zebu_control_out_port} part_SLR1
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.zebu_time_capture.zmsg_out_zebu_sendtime_out_port} part_SLR1
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.zebu_time_capture.zmsg_out_zemi_status_out_port} part_SLR1
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.zebuclk_jtag_clk.clockdelayport_core} part_SLR1
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.zebuclk_ref_clk.clockdelayport_core} part_SLR1
#   step ZDO_TCLMGR : defpart {design.U0_M0_F0.U0_M0_F0_core.zebuclk_uart_sclk.clockdelayport_core} part_SLR1
#   step ZDO_TCLMGR : defpart {design.socket_00_00_00_01.sockHalfBank24B} part_SLR1
#   step ZDO_TCLMGR : defpart {design.socket_00_00_00_01.sockHalfBank26B} part_SLR1
#   step ZDO_TCLMGR : defpart {design.socket_00_00_00_01.sockHalfBank29B} part_SLR2
#   step ZDO_TCLMGR : defpart {design.socket_00_00_00_01.sockHalfBank32B} part_SLR2
#   step ZDO_CONSTRAINT_MGR : Collect [BASE/Total] = [714/735] defparts and transform into 68426 primitives
#   step ZDO_CONSTRAINT_MGR : Collect 0 user defgroups with 0 primitives
#   step ZDO_CONSTRAINT_MGR : Collect [target/balance/fillrate] = [0/0/0] defpart_resource constraints.
#   step ZDO_CONSTRAINT_MGR : Collect 0 shell offset commands.
#   step ZDO_CONSTRAINT_MGR : Collect 0 resource weight commands.
#   step ZDO_CONSTRAINT_MGR : Collect 0 pin weight commands.
#   step ZDO_CONSTRAINT_MGR : Collect 0 user-defined indivisible modules.
#   step ZDO_CONSTRAINT_MGR : Parse dap mode : default
#   step ZDO_CONSTRAINT_MGR : Collect 0 primitive modules with user-defined resource.
#   step ZDO_CONSTRAINT_MGR : Parse socket budget: [from/to/fromTo] = [35/5/130]
#   step ZDO_CONSTRAINT_MGR : Collect 170 delay requests: [from/to/fromTo] = [35/5/130]
#   step ZDO_CONSTRAINT_MGR : Collect 0 indivisible memory defGroups.
#   step ZDO_CONSTRAINT_MGR : Collect 0 QiwcFwc defGroups.
#   step ZDO_CONSTRAINT_MGR : Collect 33 indivisible defGroups.
#   step ZDO_CONSTRAINT_MGR : Collect 8031 filters with [zClockcone/clockLev] = [2/8029]
#   step ZDO_CONSTRAINT_MGR : Collect 0 dlcone with [zcb_dlcone] = [0]
#   step ZDO_CONSTRAINT_MGR : Collect 2628 shape defGroups with [muxf/carry4/rom128x1LDCE/muxcy/xorcy] = [2628/0/0/0/0]
#   step ZDO_CONSTRAINT_MGR : Collect 0 TS clock bus defGroups.
#   step ZDO_CONSTRAINT_MGR : Collect driver clock period = 182256 ps
#   step ZDO_CONSTRAINT_MGR : Set SLR cut threshold = 19584
#   step ZDO_CONSTRAINT_MGR PARSE : Done in       elapsed:2 s      user:2 s    system:0.2 s      %cpu:97.49       load:2.11       fm:857667 m    vm:11987 m      vm:+50 m    um:11167 m      um:+54 m
#   step znlToZdoAdaptor convert : Starting
#   step ZNLZDOAdaptor : Build 714 raw vertices and 24008 ports for shell
#   step ZNLZDOAdaptor : Totally build 75659 raw vertices, 423305 raw ports(40 socket ports)
#   step ZNLZDOAdaptor : Build 203708 raw edges (8083 edges connecting to shell) and skip 10028 constant edges, 1462 edges without driver, 0 edges with multiple drivers, 18970 edges without reader
#   step computeQIWC : WAPnbCriticalNets: 0 WAPnbCriticalMem: 0
#   step ZDO_RES_EST : Estimate Resource for BlackBox - 0 estimated
#   step ZDO_RES_EST : Estimate zceiMessageOutPort_3
#   step ZDO_RES_EST : 
---------------------
|ZCEI_MESSAGE_OUTPUT|
---------------------
|1.00               |
---------------------

#   step ZDO_RES_EST : Estimate zceiMessageInPort_6
#   step ZDO_RES_EST : 
--------------------
|ZCEI_MESSAGE_INPUT|
--------------------
|1.00              |
--------------------

#   step ZDO_RES_EST : Estimate zceiMessageOutPort_4096
#   step ZDO_RES_EST : 
---------------------
|ZCEI_MESSAGE_OUTPUT|
---------------------
|1.00               |
---------------------

#   step ZDO_RES_EST : Estimate zceiMessageOutPort_128
#   step ZDO_RES_EST : 
---------------------
|ZCEI_MESSAGE_OUTPUT|
---------------------
|1.00               |
---------------------

#   step ZDO_RES_EST : Estimate zceiMessageInPort_2
#   step ZDO_RES_EST : 
--------------------
|ZCEI_MESSAGE_INPUT|
--------------------
|1.00              |
--------------------

#   step ZDO_RES_EST : Estimate zceiMessageInPort_128
#   step ZDO_RES_EST : 
--------------------
|ZCEI_MESSAGE_INPUT|
--------------------
|1.00              |
--------------------

#   step ZDO_RES_EST : Estimate zceiMessageOutPort_32
#   step ZDO_RES_EST : 
---------------------
|ZCEI_MESSAGE_OUTPUT|
---------------------
|1.00               |
---------------------

#   step ZDO_RES_EST : Estimate zceiMessageOutPort_384
#   step ZDO_RES_EST : 
---------------------
|ZCEI_MESSAGE_OUTPUT|
---------------------
|1.00               |
---------------------

#   step ZDO_RES_EST : Estimate zceiMessageInPort_160
#   step ZDO_RES_EST : 
--------------------
|ZCEI_MESSAGE_INPUT|
--------------------
|1.00              |
--------------------

#   step ZDO_RES_EST : Estimate zceiMessageOutPort_96
#   step ZDO_RES_EST : 
---------------------
|ZCEI_MESSAGE_OUTPUT|
---------------------
|1.00               |
---------------------

#   step ZDO_RES_EST : Estimate zceiMessageInPort_96
#   step ZDO_RES_EST : 
--------------------
|ZCEI_MESSAGE_INPUT|
--------------------
|1.00              |
--------------------

#   step ZDO_RES_EST : Estimate zceiMessageOutPort_288
#   step ZDO_RES_EST : 
---------------------
|ZCEI_MESSAGE_OUTPUT|
---------------------
|1.00               |
---------------------

#   step ZDO_RES_EST : Estimate zceiMessageInPort_288
#   step ZDO_RES_EST : 
--------------------
|ZCEI_MESSAGE_INPUT|
--------------------
|2.00              |
--------------------

#   step ZDO_RES_EST : Estimate zceiMessageInPort_128_98ca863d
#   step ZDO_RES_EST : 
--------------------
|ZCEI_MESSAGE_INPUT|
--------------------
|1.00              |
--------------------

#   step ZDO_RES_EST : Estimate zceiMessageOutPort_32_bf866734
#   step ZDO_RES_EST : 
---------------------
|ZCEI_MESSAGE_OUTPUT|
---------------------
|1.00               |
---------------------

#   step ZDO_RES_EST : Estimate zceiMessageInPort_128_25867fa5
#   step ZDO_RES_EST : 
--------------------
|ZCEI_MESSAGE_INPUT|
--------------------
|1.00              |
--------------------

#   step ZDO_RES_EST : Estimate zceiMessageOutPort_32_2ca9eac
#   step ZDO_RES_EST : 
---------------------
|ZCEI_MESSAGE_OUTPUT|
---------------------
|1.00               |
---------------------

#   step ZDO_RES_EST : Estimate zceiMessageInPort_128_76111552
#   step ZDO_RES_EST : 
--------------------
|ZCEI_MESSAGE_INPUT|
--------------------
|1.00              |
--------------------

#   step ZDO_RES_EST : Estimate zceiMessageOutPort_384_b6c1e42e
#   step ZDO_RES_EST : 
---------------------
|ZCEI_MESSAGE_OUTPUT|
---------------------
|1.00               |
---------------------

#   step ZDO_RES_EST : Estimate zceiMessageOutPort_384_57d6ad42
#   step ZDO_RES_EST : 
---------------------
|ZCEI_MESSAGE_OUTPUT|
---------------------
|1.00               |
---------------------

#   step ZDO_RES_EST : Estimate zceiMessageInPort_160_c1ded5d1
#   step ZDO_RES_EST : 
--------------------
|ZCEI_MESSAGE_INPUT|
--------------------
|1.00              |
--------------------

#   step ZDO_RES_EST : Estimate zceiMessageInPort_160_ebafd373
#   step ZDO_RES_EST : 
--------------------
|ZCEI_MESSAGE_INPUT|
--------------------
|1.00              |
--------------------

#   step ZDO_RES_EST : Estimate zceiMessageOutPort_384_5e588963
#   step ZDO_RES_EST : 
---------------------
|ZCEI_MESSAGE_OUTPUT|
---------------------
|1.00               |
---------------------

#   step ZDO_RES_EST : Estimate zceiMessageOutPort_384_bf4fc00f
#   step ZDO_RES_EST : 
---------------------
|ZCEI_MESSAGE_OUTPUT|
---------------------
|1.00               |
---------------------

#   step ZDO_RES_EST : Estimate zceiMessageInPort_160_2947b89c
#   step ZDO_RES_EST : 
--------------------
|ZCEI_MESSAGE_INPUT|
--------------------
|1.00              |
--------------------

#   step ZDO_RES_EST : Estimate zceiMessageInPort_160_336be3e
#   step ZDO_RES_EST : 
--------------------
|ZCEI_MESSAGE_INPUT|
--------------------
|1.00              |
--------------------

#   step ZDO_RES_EST : Estimate zceiMessageOutPort_384_8f307f45
#   step ZDO_RES_EST : 
---------------------
|ZCEI_MESSAGE_OUTPUT|
---------------------
|1.00               |
---------------------

#   step ZDO_RES_EST : Estimate zceiMessageOutPort_384_6e273629
#   step ZDO_RES_EST : 
---------------------
|ZCEI_MESSAGE_OUTPUT|
---------------------
|1.00               |
---------------------

#   step ZDO_RES_EST : Estimate zceiMessageInPort_160_f82f4eba
#   step ZDO_RES_EST : 
--------------------
|ZCEI_MESSAGE_INPUT|
--------------------
|1.00              |
--------------------

#   step ZDO_RES_EST : Estimate zceiMessageInPort_160_d25e4818
#   step ZDO_RES_EST : 
--------------------
|ZCEI_MESSAGE_INPUT|
--------------------
|1.00              |
--------------------

#   step ZDO_RES_EST : Estimate zceiMessageOutPort_384_6cbee977
#   step ZDO_RES_EST : 
---------------------
|ZCEI_MESSAGE_OUTPUT|
---------------------
|1.00               |
---------------------

#   step ZDO_RES_EST : Estimate zceiMessageOutPort_384_8da9a01b
#   step ZDO_RES_EST : 
---------------------
|ZCEI_MESSAGE_OUTPUT|
---------------------
|1.00               |
---------------------

#   step ZDO_RES_EST : Estimate zceiMessageInPort_160_1ba1d888
#   step ZDO_RES_EST : 
--------------------
|ZCEI_MESSAGE_INPUT|
--------------------
|1.00              |
--------------------

#   step ZDO_RES_EST : Estimate zceiMessageInPort_160_31d0de2a
#   step ZDO_RES_EST : 
--------------------
|ZCEI_MESSAGE_INPUT|
--------------------
|1.00              |
--------------------

#   step ZDO_RES_EST : Estimate zceiMessageOutPort_384_d8bb525a
#   step ZDO_RES_EST : 
---------------------
|ZCEI_MESSAGE_OUTPUT|
---------------------
|1.00               |
---------------------

#   step ZDO_RES_EST : Estimate zceiMessageOutPort_384_39ac1b36
#   step ZDO_RES_EST : 
---------------------
|ZCEI_MESSAGE_OUTPUT|
---------------------
|1.00               |
---------------------

#   step ZDO_RES_EST : Estimate zceiMessageInPort_160_afa463a5
#   step ZDO_RES_EST : 
--------------------
|ZCEI_MESSAGE_INPUT|
--------------------
|1.00              |
--------------------

#   step ZDO_RES_EST : Estimate zceiMessageInPort_160_85d56507
#   step ZDO_RES_EST : 
--------------------
|ZCEI_MESSAGE_INPUT|
--------------------
|1.00              |
--------------------

#   step ZDO_RES_EST : Estimate zceiMessageOutPort_384_b0d6f11c
#   step ZDO_RES_EST : 
---------------------
|ZCEI_MESSAGE_OUTPUT|
---------------------
|1.00               |
---------------------

#   step ZDO_RES_EST : Estimate zceiMessageOutPort_384_51c1b870
#   step ZDO_RES_EST : 
---------------------
|ZCEI_MESSAGE_OUTPUT|
---------------------
|1.00               |
---------------------

#   step ZDO_RES_EST : Estimate zceiMessageInPort_160_c7c9c0e3
#   step ZDO_RES_EST : 
--------------------
|ZCEI_MESSAGE_INPUT|
--------------------
|1.00              |
--------------------

#   step ZDO_RES_EST : Estimate zceiMessageInPort_160_edb8c641
#   step ZDO_RES_EST : 
--------------------
|ZCEI_MESSAGE_INPUT|
--------------------
|1.00              |
--------------------

#   step ZDO_RES_EST : Estimate zceiMessageOutPort_384_d4aeb379
#   step ZDO_RES_EST : 
---------------------
|ZCEI_MESSAGE_OUTPUT|
---------------------
|1.00               |
---------------------

#   step ZDO_RES_EST : Estimate zceiMessageOutPort_384_35b9fa15
#   step ZDO_RES_EST : 
---------------------
|ZCEI_MESSAGE_OUTPUT|
---------------------
|1.00               |
---------------------

#   step ZDO_RES_EST : Estimate zceiMessageInPort_160_a3b18286
#   step ZDO_RES_EST : 
--------------------
|ZCEI_MESSAGE_INPUT|
--------------------
|1.00              |
--------------------

#   step ZDO_RES_EST : Estimate zceiMessageInPort_160_89c08424
#   step ZDO_RES_EST : 
--------------------
|ZCEI_MESSAGE_INPUT|
--------------------
|1.00              |
--------------------

#   step ZDO_RES_EST : Estimate zceiMessageOutPort_384_14e8223b
#   step ZDO_RES_EST : 
---------------------
|ZCEI_MESSAGE_OUTPUT|
---------------------
|1.00               |
---------------------

#   step ZDO_RES_EST : Estimate zceiMessageOutPort_384_f5ff6b57
#   step ZDO_RES_EST : 
---------------------
|ZCEI_MESSAGE_OUTPUT|
---------------------
|1.00               |
---------------------

#   step ZDO_RES_EST : Estimate zceiMessageInPort_160_63f713c4
#   step ZDO_RES_EST : 
--------------------
|ZCEI_MESSAGE_INPUT|
--------------------
|1.00              |
--------------------

#   step ZDO_RES_EST : Estimate zceiMessageInPort_160_49861566
#   step ZDO_RES_EST : 
--------------------
|ZCEI_MESSAGE_INPUT|
--------------------
|1.00              |
--------------------

#   step ZDO_RES_EST : Estimate zceiMessageOutPort_384_b9bef2d0
#   step ZDO_RES_EST : 
---------------------
|ZCEI_MESSAGE_OUTPUT|
---------------------
|1.00               |
---------------------

#   step ZDO_RES_EST : Estimate zceiMessageInPort_160_cea1c32f
#   step ZDO_RES_EST : 
--------------------
|ZCEI_MESSAGE_INPUT|
--------------------
|1.00              |
--------------------

#   step ZDO_RES_EST : Estimate zceiMessageOutPort_96_81d7bb57
#   step ZDO_RES_EST : 
---------------------
|ZCEI_MESSAGE_OUTPUT|
---------------------
|1.00               |
---------------------

#   step ZDO_RES_EST : Estimate zceiMessageInPort_128_ba58a743
#   step ZDO_RES_EST : 
--------------------
|ZCEI_MESSAGE_INPUT|
--------------------
|1.00              |
--------------------

#   step ZDO_RES_EST : Estimate zceiMessageOutPort_96_10002191
#   step ZDO_RES_EST : 
---------------------
|ZCEI_MESSAGE_OUTPUT|
---------------------
|1.00               |
---------------------

#   step ZDO_RES_EST : Estimate Resource for ZCEI - 55 estimated
#   step ZDO_RES_EST : Cost per QiWC bit
#   step ZDO_RES_EST : 
---------------------
|LUT |LUT6|RAM |REG |
---------------------
|0.38|0.38|0.75|0.12|
---------------------

#   step ZDO_RES_EST : RAM:0.75000000
#   step ZDO_RES_EST : Estimate zfwc_qiwc_1
#   step ZDO_RES_EST : 
------------------------------------------------------------------
|LUT         |LUT6        |RAM         |REG         |QIWC_IP_BITS|
------------------------------------------------------------------
|0.38        |0.38        |0.75        |0.12        |1.00        |
------------------------------------------------------------------

#   step ZDO_RES_EST : DPI Frequency:0 Sampling Frequency:50000 MaxDPIBitPerIP:384
#   step ZDO_RES_EST : add fwc value set FULL_DUT_DUMP_PORTS|VCC|FWC : 0
#   step ZDO_RES_EST : Total FWC Cost
#   step ZDO_RES_EST : 
-------------------------------------------------
|LUT        |REG        |FWC_IP_NUM |FWC_IP_BITS|
-------------------------------------------------
|0.30       |0.10       |1.00       |1.00       |
-------------------------------------------------

#   step ZDO_RES_EST : Cost per FWC bit
#   step ZDO_RES_EST : 
-----------
|LUT |REG |
-----------
|0.30|0.10|
-----------

#   step ZDO_RES_EST : 0 dpi bits, 0 dpi instances
#   step ZDO_RES_EST : value set name: FULL_DUT_DUMP_PORTS|VCC|FWC - bit count 1 - instance count 1
#   step ZNLZDOAdaptor : Set lvds locations on 40 zdo raw vertices
#   step ZNLZDOAdaptor : Collect 1279 fast clk registers with 6 fast clocks
#   step ZNLZDOAdaptor : Collect 8031 vertices with ClockCone
#   step ZNLZDOAdaptor : Collect muxability types from edges and ports
#   step ZNLZDOAdaptor : Collect 0 timing arcs for 0 memory instances
#   step ZNLZDOAdaptor : Collect 35 timing arcs for 35 primitive instances
#   step ZNLZDOAdaptor : Collect 34662 timing arcs for 714 shell instances.
#   step ZNLZDOAdaptor : Collect 34697 timing arcs totally
#   step ZNLZDOAdaptor : Collect 170/170 valid timing constraints from soft constraints
#   step ZNLZDOAdaptor : Transform 170 delay requests into 0 timing constraints of driverClockPeriod 182256
#   step ZNLZDOAdaptor : Collect 170 timing constraints
#   step ZNLZDOAdaptor : Collect 68426/68426 valid single defpart constraints
#   step ZNLZDOAdaptor : Collect 0/0 valid multi defpart constraints
#   step ZNLZDOAdaptor : Collect 68426 defpart constraints
#   step ZNLZDOAdaptor : Collect 714/714 valid defpartBase constraints
#   step ZNLZDOAdaptor : Collect 0/0 valid IndivisibleMem groups (0 invalid group / 0 invalid instances / 0 empty group)
#   step ZNLZDOAdaptor : Collect 33/33 valid IndivisibleMod groups (0 invalid group / 0 invalid instances / 0 empty group)
#   step ZNLZDOAdaptor : Collect 1/1 valid ClockCone groups (0 invalid group / 0 invalid instances / 0 empty group)
#   step ZNLZDOAdaptor : Collect 0/0 valid DataCone groups (0 invalid group / 0 invalid instances / 0 empty group)
#   step ZNLZDOAdaptor : Collect 2628/2628 valid Shape groups (0 invalid group / 0 invalid instances / 0 empty group)
#   step ZNLZDOAdaptor : Collect 0/0 valid TsClockBus groups (0 invalid group / 0 invalid instances / 0 empty group)
#   step ZNLZDOAdaptor : Collect 0/0 valid User groups (0 invalid group / 0 invalid instances / 0 empty group)
#   step ZNLZDOAdaptor : Collect 0/0 valid QiwcFwc groups (0 invalid group / 0 invalid instances / 0 empty group)
#   step ZNLZDOAdaptor : Collect 0/0 valid Fwc groups (0 invalid group / 0 invalid instances / 0 empty group)
#   step ZNLZDOAdaptor : Collect 0/0 valid anchors (0 invalid anchor / 0 invalid instances)
#   step ZNLZDOAdaptor : Collect 0/0 valid localization constraints
#   step ZNLZDOAdaptor : Collect 0/0 reconstructable macros
#   step znlToZdoAdaptor convert : Done in       elapsed:6 s      user:6 s    system:0.5 s      %cpu:99.85       load:2.34       fm:855530 m    vm:12117 m     vm:+130 m    um:11297 m     um:+130 m
#   step ZDODM : Bulid netlist flat graph: 75659 vertices, 203708 edges, 423305 ports
#   step ZDODM_process_configs : Starting
#   step ZDODM : Hardgroup reduces from :2661 to 547
#   step ZDODM : Solve 536 defgroups containing defpart and set 0 vertices as defpart/multi-defpart
#   step ZDODM_process_configs : Done in     elapsed:0.4 s    user:0.3 s      system:0 s      %cpu:75.00       load:2.34       fm:855464 m    vm:12136 m      vm:+18 m    um:11317 m      um:+18 m
#   step RSRC_CONSTRAINT : Processed defpart_resource constraints [valid/total] = [0/0]
#   step RSRC_CONSTRAINT :  Output current resource constraint table: 
# +---------+--------+--------+-----+----+--------+-----+-------+----------+-----------+------------+-------------+--------------+--------------+---------------+------------+------------------+-------------------+------------+-------+-----------+-----+
# |    Parts|     LUT|    LUT6|  RAM|URAM|     REG|  DSP| RAMLUT|FWC_IP_NUM|FWC_IP_BITS|QIWC_IP_BITS|READ_PORT_IPS|READ_PORT_BITS|WRITE_PORT_IPS|WRITE_PORT_BITS|ZC_TRACE_BIT|ZCEI_MESSAGE_INPUT|ZCEI_MESSAGE_OUTPUT|FW_RESOURCES|ZPRD_BB|     ZFORCE|ZVIEW|
# +---------+--------+--------+-----+----+--------+-----+-------+----------+-----------+------------+-------------+--------------+--------------+---------------+------------+------------------+-------------------+------------+-------+-----------+-----+
# |part_SLR0|1021504 |1021500 | 485 | 64 |2043000 | 816 |129000 |      186 |     71424 |     235929 |  2147483647 |            1 |   2147483647 |             1 | 2147483647 |              150 |               150 | 2147483647 |     1 |2147483647 |   1 |
# |part_SLR1|1021504 |1021500 | 485 | 64 |2043000 | 816 |129000 |      186 |     71424 |     235929 |  2147483647 |            1 |   2147483647 |             1 | 2147483647 |              150 |               150 | 2147483647 |     1 |2147483647 |   1 |
# |part_SLR2|1021504 |1021500 | 452 | 64 |2043000 | 795 |129000 |      186 |     71424 |     235929 |  2147483647 |            1 |   2147483647 |             1 | 2147483647 |              150 |               150 | 2147483647 |     1 |2147483647 |   1 |
# |part_SLR3|1021504 |1021500 | 485 | 64 |2043000 | 816 |129000 |      186 |     71424 |     235929 |  2147483647 |            1 |   2147483647 |             1 | 2147483647 |              150 |               150 | 2147483647 |     1 |2147483647 |   1 |
# +---------+--------+--------+-----+----+--------+-----+-------+----------+-----------+------------+-------------+--------------+--------------+---------------+------------+------------------+-------------------+------------+-------+-----------+-----+
# |      SUM|4086016 |4086000 |1907 |256 |8172000 |3243 |516000 |      744 |    285696 |     943716 |          -4 |            4 |           -4 |             4 |         -4 |              600 |               600 |         -4 |     4 |        -4 |   4 |
# +---------+--------+--------+-----+----+--------+-----+-------+----------+-----------+------------+-------------+--------------+--------------+---------------+------------+------------------+-------------------+------------+-------+-----------+-----+
#   step ZDODM : Collect 0 combinational loops 0 ports in loops
#   step ZDO DM Build : Done in       elapsed:9 s      user:9 s    system:0.8 s     %cpu:103.22       load:2.34       fm:855435 m    vm:12136 m     vm:+199 m    um:11317 m     um:+205 m
#   step ConfigMgr :  Options: 
# +---------------+------------------+-------+-------+
# |     Component |           Option |  Type | Value |
# +---------------+------------------+-------+-------+
# |     partition |   dumpCongestion |   Bool| false |
# |     partition |          dataOpt |   Bool| false |
# |     partition |       addMuxFlow |   Bool|  true |
# |     partition |        filterOpt |   Bool| false |
# |     partition |        dapDirect |   Bool| false |
# |           pdm |        chunkSize | Double|     0 |
# |           pdm | timingUpdateFreq | Double|   0.1 |
# | pinAssignment |              off |   Bool|  true |
# |     placement |              off |   Bool|  true |
# |        device | userCutThreshold |    Int|     0 |
# |          flow |   outputSolution |   Bool| false |
# |          flow |        timingOpt |   Bool| false |
# +---------------+------------------+-------+-------+
#   step ZDOFLOWMGR : Run direct

Outline of Decision Making
--------------------------
1. Partitioning
2. Routing
3. PDM

#   step BUILD_TIMER : Starting
#   step ZDODM : Found 29 self loop arcs and ignored
#   step ZDODM : Build timing graph: 292520 timing nodes, 321809 timing arcs (26829 virtual arcs)
#   step ZDODM : Adjust from path constraint to 10000 design.socket_00_00_00_01.sockHalfBank24B.ClockRegion000R_24B.dser1.I1.O
#   step ZDODM : Adjust from path constraint to 31000 design.socket_00_00_00_01.sockHalfBank24B.ClockRegion000R_24B.dser3.I1.O
#   step ZDODM : Adjust from path constraint to 36000 design.socket_00_00_00_01.sockHalfBank29B.ClockRegion002R_29B.dser1.I1.O
#   step ZDODM : Adjust from path constraint to 36000 design.socket_00_00_00_01.sockHalfBank26B.ClockRegion001R_26B.dser10.I1.O
#   step ZDODM : Adjust from path constraint to 36000 design.socket_00_00_00_01.sockHalfBank29B.ClockRegion002R_29B.dser5.I1.O
#   step ZDODM : Adjust from path constraint to 36000 design.socket_00_00_00_01.sockHalfBank26B.ClockRegion001R_26B.dser9.I1.O
#   step ZDODM : Adjust from path constraint to 36000 design.socket_00_00_00_01.sockHalfBank26B.ClockRegion001R_26B.dser0.I1.O
#   step ZDODM : Adjust from path constraint to 36000 design.socket_00_00_00_01.sockHalfBank24B.ClockRegion000R_24B.dser4.I1.O
#   step ZDODM : Adjust from path constraint to 36000 design.socket_00_00_00_01.sockHalfBank26B.ClockRegion001R_26B.dser2.I1.O
#   step ZDODM : Adjust from path constraint to 36000 design.socket_00_00_00_01.sockHalfBank26B.ClockRegion001R_26B.dser8.I1.O
#   step ZDODM : Adjust from path constraint to 36000 design.socket_00_00_00_01.sockHalfBank32B.ClockRegion003R_32B.dser0.I1.O
#   step ZDODM : Adjust from path constraint to 36000 design.socket_00_00_00_01.sockHalfBank26B.ClockRegion001R_26B.dser7.I1.O
#   step ZDODM : Adjust from path constraint to 36000 design.socket_00_00_00_01.sockHalfBank29B.ClockRegion002R_29B.dser0.I1.O
#   step ZDODM : Adjust from path constraint to 36000 design.socket_00_00_00_01.sockHalfBank26B.ClockRegion001R_26B.dser1.I1.O
#   step ZDODM : Adjust from path constraint to 36000 design.socket_00_00_00_01.sockHalfBank24B.ClockRegion000R_24B.dser8.I1.O
#   step ZDODM : Adjust from path constraint to 36000 design.socket_00_00_00_01.sockHalfBank29B.ClockRegion002R_29B.dser7.I1.O
#   step ZDODM : Adjust from path constraint to 36000 design.socket_00_00_00_01.sockHalfBank26B.ClockRegion001R_26B.dser3.I1.O
#   step ZDODM : Adjust from path constraint to 36000 design.socket_00_00_00_01.sockHalfBank24B.ClockRegion000R_24B.dser6.I1.O
#   step ZDODM : Adjust from path constraint to 36000 design.socket_00_00_00_01.sockHalfBank24B.ClockRegion000R_24B.dser5.I1.O
#   step ZDODM : Adjust from path constraint to 36000 design.socket_00_00_00_01.sockHalfBank29B.ClockRegion002R_29B.dser8.I1.O
#   step ZDODM : Adjust from path constraint to 36000 design.socket_00_00_00_01.sockHalfBank29B.ClockRegion002R_29B.dser3.I1.O
#   step ZDODM : Adjust from path constraint to 36000 design.socket_00_00_00_01.sockHalfBank29B.ClockRegion002R_29B.dser4.I1.O
#   step ZDODM : Adjust from path constraint to 36000 design.socket_00_00_00_01.sockHalfBank32B.ClockRegion003R_32B.dser1.I1.O
#   step ZDODM : Adjust from path constraint to 36000 design.socket_00_00_00_01.sockHalfBank24B.ClockRegion000R_24B.dser7.I1.O
#   step ZDODM : Adjust from path constraint to 36000 design.socket_00_00_00_01.sockHalfBank26B.ClockRegion001R_26B.dser5.I1.O
#   step ZDODM : Adjust from path constraint to 36000 design.socket_00_00_00_01.sockHalfBank24B.ClockRegion000R_24B.dser9.I1.O
#   step ZDODM : Adjust from path constraint to 36000 design.socket_00_00_00_01.sockHalfBank29B.ClockRegion002R_29B.dser10.I1.O
#   step ZDODM : Adjust from path constraint to 36000 design.socket_00_00_00_01.sockHalfBank24B.ClockRegion000R_24B.dser10.I1.O
#   step ZDODM : Adjust from path constraint to 36000 design.socket_00_00_00_01.sockHalfBank26B.ClockRegion001R_26B.dser4.I1.O
#   step ZDODM : Adjust from path constraint to 36000 design.socket_00_00_00_01.sockHalfBank26B.ClockRegion001R_26B.dser6.I1.O
#   step ZDODM : Adjust from path constraint to 36000 design.socket_00_00_00_01.sockHalfBank29B.ClockRegion002R_29B.dser9.I1.O
#   step ZDODM : Adjust from path constraint to 36000 design.socket_00_00_00_01.sockHalfBank29B.ClockRegion002R_29B.dser6.I1.O
#   step ZDODM : Adjust from path constraint to 36000 design.socket_00_00_00_01.sockHalfBank29B.ClockRegion002R_29B.dser2.I1.O
#   step ZDODM : Adjust from path constraint to 69000 design.socket_00_00_00_01.sockHalfBank24B.ClockRegion000R_24B.dser2.I1.O
#   step ZDODM : Adjust to path constraint to 28000 design.socket_00_00_00_01.sockHalfBank32B.ClockRegion000S_32B.ser0.LVDSSER.sock_dout_INST_0.I1
#   step ZDODM : Adjust to path constraint to 36000 design.socket_00_00_00_01.sockHalfBank32B.ClockRegion000S_32B.ser2.LVDSSER.sock_dout_INST_0.I1
#   step ZDODM : Adjust to path constraint to 69000 design.socket_00_00_00_01.sockHalfBank32B.ClockRegion000S_32B.ser3.LVDSSER.sock_dout_INST_0.I1
#   step ZDODM : Adjust to path constraint to 36000 design.socket_00_00_00_01.sockHalfBank32B.ClockRegion000S_32B.ser1.LVDSSER.sock_dout_INST_0.I1
#   step ZDODM : Adjust 38 over constrained from/to timing constraints, number of constraints after adjustment: 170
#   step TimingConstraintHandler : 
# +-----------------+-----+-----+-----+
# |           Delay | S2F | F2S | S2S |
# +-----------------+-----+-----+-----+
# |     [0 - 20000) |   1 |   0 |   1 |
# | [20000 - 30000) |   0 |   1 |  33 |
# | [30000 - 40000) |  32 |   2 |  95 |
# | [40000 - 70000) |   1 |   1 |   1 |
# | [70000 - 90000) |   1 |   1 |   0 |
# |           Total |  35 |   5 | 130 |
# +-----------------+-----+-----+-----+
#   step TimingConstraintHandler : Collect 40 sockets and 170 constraints with [S2F/F2S/S2S] = [35/5/130]
#   step TimingConstraintHandler : Starting
#   step TimingConstraintHandler : Run min cover optimization
#   step TimingConstraintHandler : Simplify 1 constraints to reduce number of possible delays from 11 to 11
#   step TimingConstraintHandler :  Timing Constaint Report: 
# +-----------------------------------------------+-------+------------------+
# |                                          Type | Count | Total gap(in ps) |
# +-----------------------------------------------+-------+------------------+
# |                                       Invalid |     0 |     0.000000e+00 |
# | Overconstrained with constraint delay >= 50ns |     1 |     1.900000e+04 |
# |  Overconstrained with constraint delay < 50ns |     0 |     0.000000e+00 |
# |                         Overconstrained total |     1 |     1.900000e+04 |
# +-----------------------------------------------+-------+------------------+
#   step TimingConstraintHandler : Done in       elapsed:0 s      user:0 s      system:0 s       %cpu:0.00       load:2.34       fm:855345 m    vm:12152 m       vm:+0 m    um:11334 m       um:+0 m
#   step TimingConstraintHandler : Calculate 40 ports initial arr/req time with 5 tag(s)
#   step ZDO_TIMDM : collect 0 loop breaking arcs
#   step ZDO_TIMDM : loop breaking arc match 0 no match 0
#   step BUILD_TIMER : Done in    elapsed:0.42 s   user:0.41 s    system:0.2 s     %cpu:102.14       load:2.34       fm:855332 m    vm:12162 m      vm:+26 m    um:11344 m      um:+27 m
#   step ZDO_TIMDM :                 slack :  number of ports
#   step ZDO_TIMDM : [       5835,      22951 ):  1829
#   step ZDO_TIMDM : [      22951,      40067 ):  99
#   step ZDO_TIMDM : [      40067,      57183 ):  3
#   step ZDO_TIMDM : [      57183,      74300 ):  2150
#   step ZDO_TIMDM : [      74300,      91416 ):  8
#   step ZDO_TIMDM : [      91416,     108532 ):  0
#   step ZDO_TIMDM : [     108532,     125649 ):  0
#   step ZDO_TIMDM : [     125649,     142765 ):  0
#   step ZDO_TIMDM : [     142765,     159881 ):  0
#   step ZDO_TIMDM : [     159881,     176998 ):  21358
#   step ZDO_TIMDM : [     176998, 2147483647 ):  267073
#   step ZDOFLOWMGR : Timing Report - Before Partitioning
#   step ZDOFLOWMGR : [ Min slack / Top 1% min slack / Total slack / Driver clock period ] = [ 5835 / 61936 / 1.391175e+14 / 182256 ]
#   step ZDODM : Dumping timing constraint cones into file tools/zDieOpt/Before Partitioning.constraintCone.log

##################################################
## Partitioning                                 ##
##################################################

#   step run_partitioning : Starting
#   step ZDORDPAdaptor : Collect 75659 nodes
#   step ZDORDPAdaptor : Collect 77367 nets and skip 119686 1-pin nets
#   step BUILDRDPDM : Starting
#   step RDP_OPTION_MGR : Enable fixDefpart
#   step RDP_OPTION_MGR : Enable typeSpecificSpread
#   step RDP_OPTION_MGR : Enable adjustUBFactor
#   step RDP_OPTION_MGR : Enable combLoopSoftGroup
#   step RDP_OPTION_MGR : Disable dumpCongestion
#   step RDP_OPTION_MGR : Not supported option 'dataOpt'
#   step RDP_OPTION_MGR : Not supported option 'addMuxFlow'
#   step RDP_OPTION_MGR : Not supported option 'filterOpt'
#   step RDP_OPTION_MGR : Not supported option 'dapDirect'
#   step RDP_DM : Build Nodes: [Fix/Clock/Data/Total] = [40/8031/0/75659]
#   step RDP_DM : Build Nets: Total [Net/Pin/Undefined pin] = [77367/266090/0]
#   step RDP_OPTION_MGR : Enable smallDesign
#   step RDP_OPTION_MGR : Disable fastDAP
#   step RDP_OPTION_MGR : Enable setUBFactorValue 0.010000
#   step BUILDRDPDM : Done in     elapsed:0.8 s    user:0.7 s      system:0 s      %cpu:85.02       load:2.34       fm:855207 m    vm:12272 m      vm:+36 m    um:11454 m      um:+36 m
#   step RDP_OPTION_MGR : Report option table in DAP
#   step RDP_OPTION_MGR : 
# +------------------+-------+------------------------------------------------+
# |           Option | Value |                                    Description |
# +------------------+-------+------------------------------------------------+
# |    adjustUBFactor|   True|                         Adjust unbalance factor|
# | combLoopSoftGroup|   True|Add soft group constraint on combinational loops|
# |        fixDefpart|   True|       Fix defpart at the center of each fpgalet|
# |  setUBFactorValue|  0.010|              Define the UBFactor in partitionDM|
# |       smallDesign|   True|         Simplify the flow for very small design|
# |typeSpecificSpread|   True|          Spread specific resource to its column|
# +------------------+-------+------------------------------------------------+
#   step RDP_DM : Set partition for defpart nodes - Invalid/shell/normal defpart/multi defpart/total = [0/714/67712/0/68426]
#   step RDP_DM : Process zMem soft constraints - 0 groups with 0 pseudo-nets are created
#   step RDP_DM : Process combLoop soft constraints - 0 groups with 0 pseudo-nets are created
#   step RDP_DM : 11 groups are created
#   step RDP_DM : Create 0 anchor constraints
#   step RDP_DM : Sparsify Matrix - [pseudo/high degree/skip nets] = [0/56/72]
#   step RDP_DM : Estimate resource per qiwc bit
#   step RDP_DM : 
---------------------
|LUT |LUT6|RAM |REG |
---------------------
|0.38|0.38|0.75|0.12|
---------------------

#   step RDP_DM : Estimate resource per fwc bit
#   step RDP_DM : 
-----------
|LUT |REG |
-----------
|0.30|0.10|
-----------

#   step RDP_DM : set estimate qiwc bit and fwc bit resources
#   step RDP_DM : Fix defpart nodes in partition center
#   step RDP_DM : Defpart fixed in center [Part0/Part1/Part2/Part3] = [0/67588/84/0]
#   step INITQPDM : Starting
#   step INITQPDM : Done in    elapsed:0.16 s   user:0.12 s    system:0.3 s      %cpu:96.77       load:2.34       fm:855053 m    vm:12369 m      vm:+94 m    um:11548 m      um:+92 m
#   step RDP_DM : Setting QP Blockages - Num Set : 3
#   step RDP_DM : Process Skip Nodes - Num of skip nodes: 6
#   step RDP_DM : Set cut threshold = 19584
#   step RDP_DM : Report cut size table from defpart/fixed nodes
+-------------+-----------------------+-------------+----------------+-----------+
| Boundary Id |      fpgalet - fpgalet| PDMable Cut | NonPDMable Cut | Total Cut |
+-------------+-----------------------+-------------+----------------+-----------+
|           0 | part_SLR0 - part_SLR1 |           0 |              0 |         0 |
|           1 | part_SLR1 - part_SLR2 |           0 |              0 |         0 |
|           2 | part_SLR2 - part_SLR3 |           0 |              0 |         0 |
+-------------+-----------------------+-------------+----------------+-----------+


#   step RDP_PARTDM : build 74945 normal nodes, 0 group nodes, 5 legal order, 1 fwc value set
#   step RDP_PARTDM : FWC IP RAM count is 2.000000
#   step RDP_PARTDM : Build Complete
#   step RDP : Starting
#   step RDP Pre-Processing : Starting
#   step RDP : Pre-Processing using pin balance mode
#   step RDP_CONGMGR : Init inflat nodes
#   step RDP_CONGMGR : Total area: 146383.819789	Total pins: 22196	Avg pin area: 6.595054

#   step RDP_PARTMGR : == resource balance ==
### warning in RDP_PARTMGR [RDP0024W] : Part1 are preplaced too many defpart and defgoup nodes, which breaks the balance condition
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:      22140 (constraint:[     63861,      69184]) (change:     22140)
#   step RDP_PARTMGR : L_X0_Y1 - start:      22140 -> end:          0 (constraint:[         0,          0]) (change:    -22140)
#   step RDP_PARTMGR : L_X0_Y2 - start:         56 -> end:         56 (constraint:[     63557,      68880]) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:[     63861,      69184]) (change:         0)
#   step RDP_PARTMGR : Report crossing from balancing node
+------------------------+-------+
| #crossing from balance | #Nodes|
+------------------------+-------+
|                       0|     18|
|                       1|   6131|
|                       2|   1084|
|                       3|      0|
|                       4|      0|
+------------------------+-------+


#   step RDP_PARTMGR : == resource legal == auto adjust stage increase average overflow ==
#   step RDP_PARTMGR :   part1 total dynamic fwc bits: 1.000000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 7: 1.000000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 0: 0.300000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 4: 0.100000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 6: 0.000000
#   step RDP_PARTDM : legal order change 0 <-> 0
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 0.375000) ( 1, 0.375000) ( 2, 0.750000) ( 4, 0.125000) ( 9, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          2 -> end:          2 (constraint:       646) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:       627) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:          0 -> end:          0 (constraint:       602) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:       646) (change:         0)
#   step RDP_PARTDM : legal order change 1 <-> 1
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ( 4, 1.000000) ( 6, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          5 -> end:          5 (constraint:    129000) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    124340) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:          3 -> end:          3 (constraint:    129000) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:    129000) (change:         0)
#   step RDP_PARTDM : legal order change 2 <-> 2
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ( 1, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:         21 -> end:         21 (constraint:   1021498) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    982170) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:          0 -> end:          0 (constraint:   1021466) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   1021500) (change:         0)
#   step RDP_PARTDM : legal order change 3 <-> 3
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:        948 -> end:        948 (constraint:   1021477) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    982170) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:         13 -> end:         13 (constraint:   1021466) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   1021504) (change:         0)
#   step RDP_PARTDM : legal order change 4 <-> 4
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 4, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:       6131 -> end:       6131 (constraint:   2042994) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:   2007647) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:          0 -> end:          0 (constraint:   2042956) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   2043000) (change:         0)
#   step RDP_DM : Report cut size table
+-------------+-----------------------+-------------+----------------+-----------+
| Boundary Id |      fpgalet - fpgalet| PDMable Cut | NonPDMable Cut | Total Cut |
+-------------+-----------------------+-------------+----------------+-----------+
|           0 | part_SLR0 - part_SLR1 |        4421 |              0 |      4421 |
|           1 | part_SLR1 - part_SLR2 |           8 |              0 |         8 |
|           2 | part_SLR2 - part_SLR3 |           0 |              0 |         0 |
+-------------+-----------------------+-------------+----------------+-----------+


#   step RDP_DM : 
# +---------+-------------+------------+------+----+-------------+-----+-----------+----------+-----------+------------+-------------+--------------+--------------+---------------+------------+------------------+-------------------+------------+-------+------+-----+
# |  Fpgalet|          LUT|        LUT6|   RAM|URAM|          REG|  DSP|     RAMLUT|FWC_IP_NUM|FWC_IP_BITS|QIWC_IP_BITS|READ_PORT_IPS|READ_PORT_BITS|WRITE_PORT_IPS|WRITE_PORT_BITS|ZC_TRACE_BIT|ZCEI_MESSAGE_INPUT|ZCEI_MESSAGE_OUTPUT|FW_RESOURCES|ZPRD_BB|ZFORCE|ZVIEW|
# +---------+-------------+------------+------+----+-------------+-----+-----------+----------+-----------+------------+-------------+--------------+--------------+---------------+------------+------------------+-------------------+------------+-------+------+-----+
# |part_SLR0|  975/1021504|  22/1021500| 2/485|0/64| 6136/2043000|0/816|   5/129000|     0/186|    0/71424|    2/235929|          0/0|           0/1|           0/0|            0/1|         0/0|             0/150|              0/150|         0/0|    0/1|   0/0|  0/1|
# |part_SLR1|39334/1021504|2556/1021500|12/485|0/64|35353/2043000|2/816|4660/129000|     1/186|    1/71424|    6/235929|          0/0|           0/1|           0/0|            0/1|         0/0|             8/150|              7/150|         0/0|    0/1|   0/0|  0/1|
# |part_SLR2|   51/1021504|   6/1021500| 0/452|0/64|   44/2043000|0/795|   3/129000|     0/186|    0/71424|    0/235929|          0/0|           0/1|           0/0|            0/1|         0/0|             0/150|              0/150|         0/0|    0/1|   0/0|  0/1|
# |part_SLR3|    0/1021504|   0/1021500| 0/485|0/64|    0/2043000|0/816|   0/129000|     0/186|    0/71424|    0/235929|          0/0|           0/1|           0/0|            0/1|         0/0|             0/150|              0/150|         0/0|    0/1|   0/0|  0/1|
# +---------+-------------+------------+------+----+-------------+-----+-----------+----------+-----------+------------+-------------+--------------+--------------+---------------+------------+------------------+-------------------+------------+-------+------+-----+
# |      SUM|        40359|        2584|    14|   0|        41533|    2|       4668|         1|          1|           8|            0|             0|             0|              0|           0|                 8|                  7|           0|      0|     0|    0|
# +---------+-------------+------------+------+----+-------------+-----+-----------+----------+-----------+------------+-------------+--------------+--------------+---------------+------------+------------------+-------------------+------------+-------+------+-----+
#   step RDP_PARTDM : Defpart Resource Usage
#   step RDP_DM : 
# +---------+-------------+------------+------+----+-------------+-----+-----------+----------+-----------+------------+-------------+--------------+--------------+---------------+------------+------------------+-------------------+------------+-------+------+-----+
# |  Fpgalet|          LUT|        LUT6|   RAM|URAM|          REG|  DSP|     RAMLUT|FWC_IP_NUM|FWC_IP_BITS|QIWC_IP_BITS|READ_PORT_IPS|READ_PORT_BITS|WRITE_PORT_IPS|WRITE_PORT_BITS|ZC_TRACE_BIT|ZCEI_MESSAGE_INPUT|ZCEI_MESSAGE_OUTPUT|FW_RESOURCES|ZPRD_BB|ZFORCE|ZVIEW|
# +---------+-------------+------------+------+----+-------------+-----+-----------+----------+-----------+------------+-------------+--------------+--------------+---------------+------------+------------------+-------------------+------------+-------+------+-----+
# |part_SLR0|    0/1021504|   0/1021500| 0/485|0/64|    0/2043000|0/816|   0/129000|     0/186|    0/71424|    0/235929|          0/0|           0/1|           0/0|            0/1|         0/0|             0/150|              0/150|         0/0|    0/1|   0/0|  0/1|
# |part_SLR1|39334/1021504|2556/1021500|12/485|0/64|35353/2043000|2/816|4660/129000|     1/186|    1/71424|    6/235929|          0/0|           0/1|           0/0|            0/1|         0/0|             8/150|              7/150|         0/0|    0/1|   0/0|  0/1|
# |part_SLR2|   35/1021504|   6/1021500| 0/452|0/64|   41/2043000|0/795|   0/129000|     0/186|    0/71424|    0/235929|          0/0|           0/1|           0/0|            0/1|         0/0|             0/150|              0/150|         0/0|    0/1|   0/0|  0/1|
# |part_SLR3|    0/1021504|   0/1021500| 0/485|0/64|    0/2043000|0/816|   0/129000|     0/186|    0/71424|    0/235929|          0/0|           0/1|           0/0|            0/1|         0/0|             0/150|              0/150|         0/0|    0/1|   0/0|  0/1|
# +---------+-------------+------------+------+----+-------------+-----+-----------+----------+-----------+------------+-------------+--------------+--------------+---------------+------------+------------------+-------------------+------------+-------+------+-----+
# |      SUM|        39369|        2562|    12|   0|        35394|    2|       4660|         1|          1|           6|            0|             0|             0|              0|           0|                 8|                  7|           0|      0|     0|    0|
# +---------+-------------+------------+------+----+-------------+-----+-----------+----------+-----------+------------+-------------+--------------+--------------+---------------+------------+------------------+-------------------+------------+-------+------+-----+
#   step RDP : Prepare Type Spreading DB : 3
#   step RDP Pre-Processing : Done in    elapsed:0.10 s   user:0.39 s    system:0.2 s     %cpu:430.07       load:2.34       fm:855057 m    vm:12381 m      vm:+11 m    um:11561 m      um:+10 m
#   step RDP : Processing ...
#   step RDP_PARTMGR : Dynamically adjust ubfactor criteria / upper bound = [10000000.000000/10000000.000000]
#   step RDP_PARTMGR : == resource balance ==
### warning in RDP_PARTMGR [RDP0024W] : Part1 are preplaced too many defpart and defgoup nodes, which breaks the balance condition
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:      22140 (constraint:[     63861,      69184]) (change:     22140)
#   step RDP_PARTMGR : L_X0_Y1 - start:      22140 -> end:          0 (constraint:[         0,          0]) (change:    -22140)
#   step RDP_PARTMGR : L_X0_Y2 - start:         56 -> end:         56 (constraint:[     63557,      68880]) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:[     63861,      69184]) (change:         0)
#   step RDP_PARTMGR : Report crossing from balancing node
+------------------------+-------+
| #crossing from balance | #Nodes|
+------------------------+-------+
|                       0|   7233|
|                       1|      0|
|                       2|      0|
|                       3|      0|
|                       4|      0|
+------------------------+-------+


#   step RDP_PARTMGR : == resource legal == auto adjust stage increase average overflow ==
#   step RDP_PARTMGR :   part1 total dynamic fwc bits: 1.000000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 7: 1.000000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 0: 0.300000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 4: 0.100000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 6: 0.000000
#   step RDP_PARTDM : legal order change 0 <-> 0
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 0.375000) ( 1, 0.375000) ( 2, 0.750000) ( 4, 0.125000) ( 9, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          2 -> end:          2 (constraint:       646) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:       627) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:          0 -> end:          0 (constraint:       602) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:       646) (change:         0)
#   step RDP_PARTDM : legal order change 1 <-> 1
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ( 4, 1.000000) ( 6, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          5 -> end:          5 (constraint:    129000) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    124340) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:          3 -> end:          3 (constraint:    129000) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:    129000) (change:         0)
#   step RDP_PARTDM : legal order change 2 <-> 2
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ( 1, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:         21 -> end:         21 (constraint:   1021498) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    982170) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:          0 -> end:          0 (constraint:   1021466) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   1021500) (change:         0)
#   step RDP_PARTDM : legal order change 3 <-> 3
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:        948 -> end:        948 (constraint:   1021477) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    982170) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:         13 -> end:         13 (constraint:   1021466) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   1021504) (change:         0)
#   step RDP_PARTDM : legal order change 4 <-> 4
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 4, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:       6131 -> end:       6131 (constraint:   2042994) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:   2007647) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:          0 -> end:          0 (constraint:   2042956) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   2043000) (change:         0)
#   step RDP : Complete Iteration 0
#   step RDP_PARTMGR : == resource balance ==
### warning in RDP_PARTMGR [RDP0024W] : Part1 are preplaced too many defpart and defgoup nodes, which breaks the balance condition
#   step RDP_PARTMGR : L_X0_Y0 - start:          3 -> end:          3 (constraint:[     63861,      69184]) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:      22137 -> end:          0 (constraint:[         0,          0]) (change:    -22137)
#   step RDP_PARTMGR : L_X0_Y2 - start:         56 -> end:      22193 (constraint:[     63557,      68880]) (change:     22137)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:[     63861,      69184]) (change:         0)
#   step RDP_PARTMGR : Report crossing from balancing node
+------------------------+-------+
| #crossing from balance | #Nodes|
+------------------------+-------+
|                       0|    299|
|                       1|      0|
|                       2|   6934|
|                       3|      0|
|                       4|      0|
+------------------------+-------+


#   step RDP_PARTMGR : == resource legal == auto adjust stage increase average overflow ==
#   step RDP_PARTMGR :   part1 total dynamic fwc bits: 1.000000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 7: 1.000000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 0: 0.300000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 4: 0.100000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 6: 0.000000
#   step RDP_PARTDM : legal order change 0 <-> 0
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 0.375000) ( 1, 0.375000) ( 2, 0.750000) ( 4, 0.125000) ( 9, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:          0 (constraint:       646) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:       627) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:          2 -> end:          2 (constraint:       602) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:       646) (change:         0)
#   step RDP_PARTDM : legal order change 1 <-> 1
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ( 4, 1.000000) ( 6, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:          0 (constraint:    129000) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    124340) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:          8 -> end:          8 (constraint:    129000) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:    129000) (change:         0)
#   step RDP_PARTDM : legal order change 2 <-> 2
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ( 1, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:          0 (constraint:   1021500) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    982170) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:         21 -> end:         21 (constraint:   1021460) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   1021500) (change:         0)
#   step RDP_PARTDM : legal order change 3 <-> 3
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:          0 (constraint:   1021504) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    982170) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:        961 -> end:        961 (constraint:   1021439) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   1021504) (change:         0)
#   step RDP_PARTDM : legal order change 4 <-> 4
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 4, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:        279 -> end:        279 (constraint:   2043000) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:   2007647) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:       5852 -> end:       5852 (constraint:   2042950) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   2043000) (change:         0)
#   step RDP : Complete Iteration 1
#   step RDP_PARTMGR : == resource balance ==
### warning in RDP_PARTMGR [RDP0024W] : Part1 are preplaced too many defpart and defgoup nodes, which breaks the balance condition
#   step RDP_PARTMGR : L_X0_Y0 - start:          3 -> end:          3 (constraint:[     63861,      69184]) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:      22137 -> end:          0 (constraint:[         0,          0]) (change:    -22137)
#   step RDP_PARTMGR : L_X0_Y2 - start:         56 -> end:      22193 (constraint:[     63557,      68880]) (change:     22137)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:[     63861,      69184]) (change:         0)
#   step RDP_PARTMGR : Report crossing from balancing node
+------------------------+-------+
| #crossing from balance | #Nodes|
+------------------------+-------+
|                       0|   7233|
|                       1|      0|
|                       2|      0|
|                       3|      0|
|                       4|      0|
+------------------------+-------+


#   step RDP_PARTMGR : == resource legal == auto adjust stage increase average overflow ==
#   step RDP_PARTMGR :   part1 total dynamic fwc bits: 1.000000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 7: 1.000000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 0: 0.300000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 4: 0.100000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 6: 0.000000
#   step RDP_PARTDM : legal order change 0 <-> 0
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 0.375000) ( 1, 0.375000) ( 2, 0.750000) ( 4, 0.125000) ( 9, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:          0 (constraint:       646) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:       627) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:          2 -> end:          2 (constraint:       602) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:       646) (change:         0)
#   step RDP_PARTDM : legal order change 1 <-> 1
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ( 4, 1.000000) ( 6, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:          0 (constraint:    129000) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    124340) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:          8 -> end:          8 (constraint:    129000) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:    129000) (change:         0)
#   step RDP_PARTDM : legal order change 2 <-> 2
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ( 1, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:          0 (constraint:   1021500) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    982170) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:         21 -> end:         21 (constraint:   1021460) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   1021500) (change:         0)
#   step RDP_PARTDM : legal order change 3 <-> 3
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:          0 (constraint:   1021504) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    982170) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:        961 -> end:        961 (constraint:   1021439) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   1021504) (change:         0)
#   step RDP_PARTDM : legal order change 4 <-> 4
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 4, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:        279 -> end:        279 (constraint:   2043000) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:   2007647) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:       5852 -> end:       5852 (constraint:   2042950) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   2043000) (change:         0)
#   step RDP : Complete Iteration 2
#   step RDP_PARTMGR : == resource balance ==
### warning in RDP_PARTMGR [RDP0024W] : Part1 are preplaced too many defpart and defgoup nodes, which breaks the balance condition
#   step RDP_PARTMGR : L_X0_Y0 - start:          3 -> end:          3 (constraint:[     63861,      69184]) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:      22135 -> end:          0 (constraint:[         0,          0]) (change:    -22135)
#   step RDP_PARTMGR : L_X0_Y2 - start:         58 -> end:      22193 (constraint:[     63557,      68880]) (change:     22135)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:[     63861,      69184]) (change:         0)
#   step RDP_PARTMGR : Report crossing from balancing node
+------------------------+-------+
| #crossing from balance | #Nodes|
+------------------------+-------+
|                       0|   7233|
|                       1|      0|
|                       2|      0|
|                       3|      0|
|                       4|      0|
+------------------------+-------+


#   step RDP_PARTMGR : == resource legal == auto adjust stage increase average overflow ==
#   step RDP_PARTMGR :   part1 total dynamic fwc bits: 1.000000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 7: 1.000000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 0: 0.300000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 4: 0.100000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 6: 0.000000
#   step RDP_PARTDM : legal order change 0 <-> 0
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 0.375000) ( 1, 0.375000) ( 2, 0.750000) ( 4, 0.125000) ( 9, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:          0 (constraint:       646) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:       627) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:          2 -> end:          2 (constraint:       602) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:       646) (change:         0)
#   step RDP_PARTDM : legal order change 1 <-> 1
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ( 4, 1.000000) ( 6, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:          0 (constraint:    129000) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    124340) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:          8 -> end:          8 (constraint:    129000) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:    129000) (change:         0)
#   step RDP_PARTDM : legal order change 2 <-> 2
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ( 1, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:          0 (constraint:   1021500) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    982170) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:         21 -> end:         21 (constraint:   1021460) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   1021500) (change:         0)
#   step RDP_PARTDM : legal order change 3 <-> 3
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:          0 (constraint:   1021504) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    982170) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:        961 -> end:        961 (constraint:   1021439) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   1021504) (change:         0)
#   step RDP_PARTDM : legal order change 4 <-> 4
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 4, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:        279 -> end:        279 (constraint:   2043000) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:   2007647) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:       5852 -> end:       5852 (constraint:   2042950) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   2043000) (change:         0)
#   step RDP : Complete Iteration 3
#   step RDP_PARTMGR : == resource balance ==
### warning in RDP_PARTMGR [RDP0024W] : Part1 are preplaced too many defpart and defgoup nodes, which breaks the balance condition
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:      22138 (constraint:[     63861,      69184]) (change:     22138)
#   step RDP_PARTMGR : L_X0_Y1 - start:      22138 -> end:          0 (constraint:[         0,          0]) (change:    -22138)
#   step RDP_PARTMGR : L_X0_Y2 - start:         58 -> end:         58 (constraint:[     63557,      68880]) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:[     63861,      69184]) (change:         0)
#   step RDP_PARTMGR : Report crossing from balancing node
+------------------------+-------+
| #crossing from balance | #Nodes|
+------------------------+-------+
|                       0|    300|
|                       1|      0|
|                       2|   6933|
|                       3|      0|
|                       4|      0|
+------------------------+-------+


#   step RDP_PARTMGR : == resource legal == auto adjust stage increase average overflow ==
#   step RDP_PARTMGR :   part1 total dynamic fwc bits: 1.000000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 7: 1.000000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 0: 0.300000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 4: 0.100000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 6: 0.000000
#   step RDP_PARTDM : legal order change 0 <-> 0
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 0.375000) ( 1, 0.375000) ( 2, 0.750000) ( 4, 0.125000) ( 9, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          2 -> end:          2 (constraint:       646) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:       627) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:          0 -> end:          0 (constraint:       602) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:       646) (change:         0)
#   step RDP_PARTDM : legal order change 1 <-> 1
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ( 4, 1.000000) ( 6, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          5 -> end:          5 (constraint:    129000) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    124340) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:          3 -> end:          3 (constraint:    129000) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:    129000) (change:         0)
#   step RDP_PARTDM : legal order change 2 <-> 2
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ( 1, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:         21 -> end:         21 (constraint:   1021498) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    982170) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:          0 -> end:          0 (constraint:   1021466) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   1021500) (change:         0)
#   step RDP_PARTDM : legal order change 3 <-> 3
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:        947 -> end:        947 (constraint:   1021477) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    982170) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:         14 -> end:         14 (constraint:   1021466) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   1021504) (change:         0)
#   step RDP_PARTDM : legal order change 4 <-> 4
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 4, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:       6131 -> end:       6131 (constraint:   2042994) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:   2007647) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:          0 -> end:          0 (constraint:   2042956) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   2043000) (change:         0)
#   step RDP : Complete Iteration 4
#   step RDP_PARTMGR : == resource balance ==
### warning in RDP_PARTMGR [RDP0024W] : Part1 are preplaced too many defpart and defgoup nodes, which breaks the balance condition
#   step RDP_PARTMGR : L_X0_Y0 - start:          3 -> end:          3 (constraint:[     63861,      69184]) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:      22135 -> end:          0 (constraint:[         0,          0]) (change:    -22135)
#   step RDP_PARTMGR : L_X0_Y2 - start:         58 -> end:      22193 (constraint:[     63557,      68880]) (change:     22135)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:[     63861,      69184]) (change:         0)
#   step RDP_PARTMGR : Report crossing from balancing node
+------------------------+-------+
| #crossing from balance | #Nodes|
+------------------------+-------+
|                       0|    300|
|                       1|      0|
|                       2|   6933|
|                       3|      0|
|                       4|      0|
+------------------------+-------+


#   step RDP_PARTMGR : == resource legal == auto adjust stage increase average overflow ==
#   step RDP_PARTMGR :   part1 total dynamic fwc bits: 1.000000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 7: 1.000000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 0: 0.300000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 4: 0.100000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 6: 0.000000
#   step RDP_PARTDM : legal order change 0 <-> 0
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 0.375000) ( 1, 0.375000) ( 2, 0.750000) ( 4, 0.125000) ( 9, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:          0 (constraint:       646) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:       627) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:          2 -> end:          2 (constraint:       602) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:       646) (change:         0)
#   step RDP_PARTDM : legal order change 1 <-> 1
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ( 4, 1.000000) ( 6, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:          0 (constraint:    129000) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    124340) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:          8 -> end:          8 (constraint:    129000) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:    129000) (change:         0)
#   step RDP_PARTDM : legal order change 2 <-> 2
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ( 1, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:          0 (constraint:   1021500) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    982170) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:         21 -> end:         21 (constraint:   1021460) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   1021500) (change:         0)
#   step RDP_PARTDM : legal order change 3 <-> 3
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:          0 (constraint:   1021504) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    982170) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:        961 -> end:        961 (constraint:   1021439) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   1021504) (change:         0)
#   step RDP_PARTDM : legal order change 4 <-> 4
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 4, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:        279 -> end:        279 (constraint:   2043000) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:   2007647) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:       5852 -> end:       5852 (constraint:   2042950) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   2043000) (change:         0)
#   step RDP : Complete Iteration 5
#   step RDP_PARTMGR : == resource balance ==
### warning in RDP_PARTMGR [RDP0024W] : Part1 are preplaced too many defpart and defgoup nodes, which breaks the balance condition
#   step RDP_PARTMGR : L_X0_Y0 - start:          3 -> end:          3 (constraint:[     63861,      69184]) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:      22135 -> end:          0 (constraint:[         0,          0]) (change:    -22135)
#   step RDP_PARTMGR : L_X0_Y2 - start:         58 -> end:      22193 (constraint:[     63557,      68880]) (change:     22135)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:[     63861,      69184]) (change:         0)
#   step RDP_PARTMGR : Report crossing from balancing node
+------------------------+-------+
| #crossing from balance | #Nodes|
+------------------------+-------+
|                       0|   7233|
|                       1|      0|
|                       2|      0|
|                       3|      0|
|                       4|      0|
+------------------------+-------+


#   step RDP_PARTMGR : == resource legal == auto adjust stage increase average overflow ==
#   step RDP_PARTMGR :   part1 total dynamic fwc bits: 1.000000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 7: 1.000000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 0: 0.300000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 4: 0.100000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 6: 0.000000
#   step RDP_PARTDM : legal order change 0 <-> 0
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 0.375000) ( 1, 0.375000) ( 2, 0.750000) ( 4, 0.125000) ( 9, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:          0 (constraint:       646) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:       627) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:          2 -> end:          2 (constraint:       602) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:       646) (change:         0)
#   step RDP_PARTDM : legal order change 1 <-> 1
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ( 4, 1.000000) ( 6, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:          0 (constraint:    129000) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    124340) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:          8 -> end:          8 (constraint:    129000) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:    129000) (change:         0)
#   step RDP_PARTDM : legal order change 2 <-> 2
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ( 1, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:          0 (constraint:   1021500) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    982170) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:         21 -> end:         21 (constraint:   1021460) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   1021500) (change:         0)
#   step RDP_PARTDM : legal order change 3 <-> 3
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:          0 (constraint:   1021504) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    982170) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:        961 -> end:        961 (constraint:   1021439) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   1021504) (change:         0)
#   step RDP_PARTDM : legal order change 4 <-> 4
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 4, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:        279 -> end:        279 (constraint:   2043000) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:   2007647) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:       5852 -> end:       5852 (constraint:   2042950) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   2043000) (change:         0)
#   step RDP : Complete Iteration 6
#   step RDP_PARTMGR : == resource balance ==
### warning in RDP_PARTMGR [RDP0024W] : Part1 are preplaced too many defpart and defgoup nodes, which breaks the balance condition
#   step RDP_PARTMGR : L_X0_Y0 - start:          3 -> end:          3 (constraint:[     63861,      69184]) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:      22135 -> end:          0 (constraint:[         0,          0]) (change:    -22135)
#   step RDP_PARTMGR : L_X0_Y2 - start:         58 -> end:      22193 (constraint:[     63557,      68880]) (change:     22135)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:[     63861,      69184]) (change:         0)
#   step RDP_PARTMGR : Report crossing from balancing node
+------------------------+-------+
| #crossing from balance | #Nodes|
+------------------------+-------+
|                       0|   7233|
|                       1|      0|
|                       2|      0|
|                       3|      0|
|                       4|      0|
+------------------------+-------+


#   step RDP_PARTMGR : == resource legal == auto adjust stage increase average overflow ==
#   step RDP_PARTMGR :   part1 total dynamic fwc bits: 1.000000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 7: 1.000000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 0: 0.300000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 4: 0.100000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 6: 0.000000
#   step RDP_PARTDM : legal order change 0 <-> 0
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 0.375000) ( 1, 0.375000) ( 2, 0.750000) ( 4, 0.125000) ( 9, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:          0 (constraint:       646) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:       627) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:          2 -> end:          2 (constraint:       602) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:       646) (change:         0)
#   step RDP_PARTDM : legal order change 1 <-> 1
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ( 4, 1.000000) ( 6, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:          0 (constraint:    129000) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    124340) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:          8 -> end:          8 (constraint:    129000) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:    129000) (change:         0)
#   step RDP_PARTDM : legal order change 2 <-> 2
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ( 1, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:          0 (constraint:   1021500) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    982170) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:         21 -> end:         21 (constraint:   1021460) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   1021500) (change:         0)
#   step RDP_PARTDM : legal order change 3 <-> 3
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:          0 (constraint:   1021504) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    982170) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:        961 -> end:        961 (constraint:   1021439) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   1021504) (change:         0)
#   step RDP_PARTDM : legal order change 4 <-> 4
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 4, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:        279 -> end:        279 (constraint:   2043000) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:   2007647) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:       5852 -> end:       5852 (constraint:   2042950) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   2043000) (change:         0)
#   step RDP : Complete Iteration 7
#   step RDP_PARTMGR : == resource balance ==
### warning in RDP_PARTMGR [RDP0024W] : Part1 are preplaced too many defpart and defgoup nodes, which breaks the balance condition
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:      22138 (constraint:[     63861,      69184]) (change:     22138)
#   step RDP_PARTMGR : L_X0_Y1 - start:      22138 -> end:          0 (constraint:[         0,          0]) (change:    -22138)
#   step RDP_PARTMGR : L_X0_Y2 - start:         58 -> end:         58 (constraint:[     63557,      68880]) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:[     63861,      69184]) (change:         0)
#   step RDP_PARTMGR : Report crossing from balancing node
+------------------------+-------+
| #crossing from balance | #Nodes|
+------------------------+-------+
|                       0|    300|
|                       1|      0|
|                       2|   6933|
|                       3|      0|
|                       4|      0|
+------------------------+-------+


#   step RDP_PARTMGR : == resource legal == auto adjust stage increase average overflow ==
#   step RDP_PARTMGR :   part1 total dynamic fwc bits: 1.000000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 7: 1.000000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 0: 0.300000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 4: 0.100000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 6: 0.000000
#   step RDP_PARTDM : legal order change 0 <-> 0
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 0.375000) ( 1, 0.375000) ( 2, 0.750000) ( 4, 0.125000) ( 9, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          2 -> end:          2 (constraint:       646) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:       627) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:          0 -> end:          0 (constraint:       602) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:       646) (change:         0)
#   step RDP_PARTDM : legal order change 1 <-> 1
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ( 4, 1.000000) ( 6, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          5 -> end:          5 (constraint:    129000) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    124340) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:          3 -> end:          3 (constraint:    129000) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:    129000) (change:         0)
#   step RDP_PARTDM : legal order change 2 <-> 2
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ( 1, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:         21 -> end:         21 (constraint:   1021498) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    982170) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:          0 -> end:          0 (constraint:   1021466) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   1021500) (change:         0)
#   step RDP_PARTDM : legal order change 3 <-> 3
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:        947 -> end:        947 (constraint:   1021477) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    982170) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:         14 -> end:         14 (constraint:   1021466) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   1021504) (change:         0)
#   step RDP_PARTDM : legal order change 4 <-> 4
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 4, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:       6131 -> end:       6131 (constraint:   2042994) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:   2007647) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:          0 -> end:          0 (constraint:   2042956) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   2043000) (change:         0)
#   step RDP : Complete Iteration 8
#   step RDP_PARTMGR : == resource balance ==
### warning in RDP_PARTMGR [RDP0024W] : Part1 are preplaced too many defpart and defgoup nodes, which breaks the balance condition
#   step RDP_PARTMGR : L_X0_Y0 - start:          3 -> end:          3 (constraint:[     63861,      69184]) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:      22135 -> end:          0 (constraint:[         0,          0]) (change:    -22135)
#   step RDP_PARTMGR : L_X0_Y2 - start:         58 -> end:      22193 (constraint:[     63557,      68880]) (change:     22135)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:[     63861,      69184]) (change:         0)
#   step RDP_PARTMGR : Report crossing from balancing node
+------------------------+-------+
| #crossing from balance | #Nodes|
+------------------------+-------+
|                       0|    300|
|                       1|      0|
|                       2|   6933|
|                       3|      0|
|                       4|      0|
+------------------------+-------+


#   step RDP_PARTMGR : == resource legal == auto adjust stage increase average overflow ==
#   step RDP_PARTMGR :   part1 total dynamic fwc bits: 1.000000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 7: 1.000000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 0: 0.300000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 4: 0.100000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 6: 0.000000
#   step RDP_PARTDM : legal order change 0 <-> 0
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 0.375000) ( 1, 0.375000) ( 2, 0.750000) ( 4, 0.125000) ( 9, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:          0 (constraint:       646) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:       627) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:          2 -> end:          2 (constraint:       602) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:       646) (change:         0)
#   step RDP_PARTDM : legal order change 1 <-> 1
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ( 4, 1.000000) ( 6, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:          0 (constraint:    129000) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    124340) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:          8 -> end:          8 (constraint:    129000) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:    129000) (change:         0)
#   step RDP_PARTDM : legal order change 2 <-> 2
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ( 1, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:          0 (constraint:   1021500) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    982170) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:         21 -> end:         21 (constraint:   1021460) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   1021500) (change:         0)
#   step RDP_PARTDM : legal order change 3 <-> 3
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:          0 (constraint:   1021504) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    982170) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:        961 -> end:        961 (constraint:   1021439) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   1021504) (change:         0)
#   step RDP_PARTDM : legal order change 4 <-> 4
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 4, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:        279 -> end:        279 (constraint:   2043000) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:   2007647) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:       5852 -> end:       5852 (constraint:   2042950) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   2043000) (change:         0)
#   step RDP : Complete Iteration 9
#   step RDP_PARTDM : build 74923 normal nodes, 11 group nodes, 6 legal order, 1 fwc value set
#   step RDP_PARTMGR : == resource balance ==
### warning in RDP_PARTMGR [RDP0024W] : Part1 are preplaced too many defpart and defgoup nodes, which breaks the balance condition
#   step RDP_PARTMGR : L_X0_Y0 - start:          3 -> end:          3 (constraint:[     63861,      69184]) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:      22135 -> end:          0 (constraint:[         0,          0]) (change:    -22135)
#   step RDP_PARTMGR : L_X0_Y2 - start:         58 -> end:      22193 (constraint:[     63557,      68880]) (change:     22135)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:[     63861,      69184]) (change:         0)
#   step RDP_PARTMGR : Report crossing from balancing node
+------------------------+-------+
| #crossing from balance | #Nodes|
+------------------------+-------+
|                       0|    300|
|                       1|   6922|
|                       2|      0|
|                       3|      0|
|                       4|      0|
+------------------------+-------+


#   step RDP_PARTMGR : == resource legal == auto adjust stage increase average overflow ==
#   step RDP_PARTMGR :   part1 total dynamic fwc bits: 1.000000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 7: 1.000000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 0: 0.300000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 4: 0.100000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 6: 0.000000
#   step RDP_PARTDM : legal order change 0 <-> 0
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 0.375000) ( 1, 0.375000) ( 2, 0.750000) ( 4, 0.125000) ( 9, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:          0 (constraint:       646) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:       627) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:          2 -> end:          2 (constraint:       602) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:       646) (change:         0)
#   step RDP_PARTDM : legal order change 1 <-> 1
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ( 4, 1.000000) ( 6, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:          0 (constraint:    129000) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    124340) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:          8 -> end:          8 (constraint:    129000) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:    129000) (change:         0)
#   step RDP_PARTDM : legal order change 2 <-> 2
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ( 1, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:          0 (constraint:   1021500) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    982170) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:         21 -> end:         21 (constraint:   1021460) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   1021500) (change:         0)
#   step RDP_PARTDM : legal order change 3 <-> 3
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ( 4, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:          0 (constraint:   1021504) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    982170) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:         11 -> end:         11 (constraint:   1021439) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   1021504) (change:         0)
#   step RDP_PARTDM : legal order change 4 <-> 4
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:          0 (constraint:   1021504) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    982170) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:        950 -> end:        950 (constraint:   1021428) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   1021504) (change:         0)
#   step RDP_PARTDM : legal order change 5 <-> 5
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 4, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:        279 -> end:        279 (constraint:   2043000) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:   2007647) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:       5841 -> end:       5841 (constraint:   2042939) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   2043000) (change:         0)
#   step RDP : Complete Iteration 10
#   step RDP_PARTMGR : == resource balance ==
### warning in RDP_PARTMGR [RDP0024W] : Part1 are preplaced too many defpart and defgoup nodes, which breaks the balance condition
#   step RDP_PARTMGR : L_X0_Y0 - start:          3 -> end:          3 (constraint:[     63861,      69184]) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:      22135 -> end:          0 (constraint:[         0,          0]) (change:    -22135)
#   step RDP_PARTMGR : L_X0_Y2 - start:         58 -> end:      22193 (constraint:[     63557,      68880]) (change:     22135)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:[     63861,      69184]) (change:         0)
#   step RDP_PARTMGR : Report crossing from balancing node
+------------------------+-------+
| #crossing from balance | #Nodes|
+------------------------+-------+
|                       0|   7222|
|                       1|      0|
|                       2|      0|
|                       3|      0|
|                       4|      0|
+------------------------+-------+


#   step RDP_PARTMGR : == resource legal == auto adjust stage increase average overflow ==
#   step RDP_PARTMGR :   part1 total dynamic fwc bits: 1.000000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 7: 1.000000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 0: 0.300000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 4: 0.100000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 6: 0.000000
#   step RDP_PARTDM : legal order change 0 <-> 0
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 0.375000) ( 1, 0.375000) ( 2, 0.750000) ( 4, 0.125000) ( 9, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:          0 (constraint:       646) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:       627) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:          2 -> end:          2 (constraint:       602) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:       646) (change:         0)
#   step RDP_PARTDM : legal order change 1 <-> 1
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ( 4, 1.000000) ( 6, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:          0 (constraint:    129000) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    124340) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:          8 -> end:          8 (constraint:    129000) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:    129000) (change:         0)
#   step RDP_PARTDM : legal order change 2 <-> 2
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ( 1, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:          0 (constraint:   1021500) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    982170) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:         21 -> end:         21 (constraint:   1021460) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   1021500) (change:         0)
#   step RDP_PARTDM : legal order change 3 <-> 3
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ( 4, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:          0 (constraint:   1021504) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    982170) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:         11 -> end:         11 (constraint:   1021439) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   1021504) (change:         0)
#   step RDP_PARTDM : legal order change 4 <-> 4
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:          0 (constraint:   1021504) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    982170) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:        950 -> end:        950 (constraint:   1021428) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   1021504) (change:         0)
#   step RDP_PARTDM : legal order change 5 <-> 5
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 4, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:        279 -> end:        279 (constraint:   2043000) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:   2007647) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:       5841 -> end:       5841 (constraint:   2042939) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   2043000) (change:         0)
#   step RDP : Complete Iteration 11
#   step RDP : Cut size <= SLR cut threshold.
#   step RDP_DM : Report cut size table
+-------------+-----------------------+-------------+----------------+-----------+
| Boundary Id |      fpgalet - fpgalet| PDMable Cut | NonPDMable Cut | Total Cut |
+-------------+-----------------------+-------------+----------------+-----------+
|           0 | part_SLR0 - part_SLR1 |           1 |              1 |         2 |
|           1 | part_SLR1 - part_SLR2 |        4415 |              1 |      4416 |
|           2 | part_SLR2 - part_SLR3 |           0 |              0 |         0 |
+-------------+-----------------------+-------------+----------------+-----------+


#   step RDP_DM : 
# +---------+-------------+------------+------+----+-------------+-----+-----------+----------+-----------+------------+-------------+--------------+--------------+---------------+------------+------------------+-------------------+------------+-------+------+-----+
# |  Fpgalet|          LUT|        LUT6|   RAM|URAM|          REG|  DSP|     RAMLUT|FWC_IP_NUM|FWC_IP_BITS|QIWC_IP_BITS|READ_PORT_IPS|READ_PORT_BITS|WRITE_PORT_IPS|WRITE_PORT_BITS|ZC_TRACE_BIT|ZCEI_MESSAGE_INPUT|ZCEI_MESSAGE_OUTPUT|FW_RESOURCES|ZPRD_BB|ZFORCE|ZVIEW|
# +---------+-------------+------------+------+----+-------------+-----+-----------+----------+-----------+------------+-------------+--------------+--------------+---------------+------------+------------------+-------------------+------------+-------+------+-----+
# |part_SLR0|    0/1021504|   0/1021500| 0/485|0/64|  279/2043000|0/816|   0/129000|     0/186|    0/71424|    0/235929|          0/0|           0/1|           0/0|            0/1|         0/0|             0/150|              0/150|         0/0|    0/1|   0/0|  0/1|
# |part_SLR1|39334/1021504|2556/1021500|12/485|0/64|35353/2043000|2/816|4660/129000|     1/186|    1/71424|    6/235929|          0/0|           0/1|           0/0|            0/1|         0/0|             8/150|              7/150|         0/0|    0/1|   0/0|  0/1|
# |part_SLR2| 1026/1021504|  28/1021500| 2/452|0/64| 5901/2043000|0/795|   8/129000|     0/186|    0/71424|    2/235929|          0/0|           0/1|           0/0|            0/1|         0/0|             0/150|              0/150|         0/0|    0/1|   0/0|  0/1|
# |part_SLR3|    0/1021504|   0/1021500| 0/485|0/64|    0/2043000|0/816|   0/129000|     0/186|    0/71424|    0/235929|          0/0|           0/1|           0/0|            0/1|         0/0|             0/150|              0/150|         0/0|    0/1|   0/0|  0/1|
# +---------+-------------+------------+------+----+-------------+-----+-----------+----------+-----------+------------+-------------+--------------+--------------+---------------+------------+------------------+-------------------+------------+-------+------+-----+
# |      SUM|        40359|        2584|    14|   0|        41533|    2|       4668|         1|          1|           8|            0|             0|             0|              0|           0|                 8|                  7|           0|      0|     0|    0|
# +---------+-------------+------------+------+----+-------------+-----+-----------+----------+-----------+------------+-------------+--------------+--------------+---------------+------------+------------------+-------------------+------------+-------+------+-----+
#   step RDP : Total Cut: 2 (DUT:2 FW:0) - CGcut: 2  - Gain: 0.00 - Max Gain: -100.00
#   step RDP : Total Cut: 4416 (DUT:4416 FW:0) - CGcut: 8  - Gain: 551.00 - Max Gain: -100.00
#   step RDP : Total Cut: 0 (DUT:0 FW:0) - CGcut: 0  - Gain: -nan - Max Gain: -100.00
#   step RDP : Post-Processing ...
#   step RDP_PARTDM : build 74923 normal nodes, 11 group nodes, 6 legal order, 1 fwc value set
#   step RDP_PARTMGR : == resource legal == auto adjust stage increase average overflow ==
#   step RDP_PARTMGR :   part1 total dynamic fwc bits: 1.000000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 7: 1.000000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 0: 0.300000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 4: 0.100000
#   step RDP_PARTMGR :   part1 dynamic fwc resource 6: 0.000000
#   step RDP_PARTDM : legal order change 0 <-> 0
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 0.375000) ( 1, 0.375000) ( 2, 0.750000) ( 4, 0.125000) ( 9, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:          0 (constraint:       646) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:       627) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:          2 -> end:          2 (constraint:       602) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:       646) (change:         0)
#   step RDP_PARTDM : legal order change 1 <-> 1
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ( 4, 1.000000) ( 6, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:          0 (constraint:    129000) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    124340) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:          8 -> end:          8 (constraint:    129000) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:    129000) (change:         0)
#   step RDP_PARTDM : legal order change 2 <-> 2
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ( 1, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:          0 (constraint:   1021500) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    982170) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:         21 -> end:         21 (constraint:   1021460) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   1021500) (change:         0)
#   step RDP_PARTDM : legal order change 3 <-> 3
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ( 4, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:          0 (constraint:   1021504) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    982170) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:         11 -> end:         11 (constraint:   1021439) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   1021504) (change:         0)
#   step RDP_PARTDM : legal order change 4 <-> 4
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 0, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:          0 -> end:          0 (constraint:   1021504) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:    982170) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:        950 -> end:        950 (constraint:   1021428) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   1021504) (change:         0)
#   step RDP_PARTDM : legal order change 5 <-> 5
#   step RDP_PARTMGR : == Resource Vector (Resource ID, size) ( 4, 1.000000) ==
#   step RDP_PARTMGR : L_X0_Y0 - start:        278 -> end:        278 (constraint:   2043000) (change:         0)
#   step RDP_PARTMGR : L_X0_Y1 - start:          0 -> end:          0 (constraint:   2007647) (change:         0)
#   step RDP_PARTMGR : L_X0_Y2 - start:       5842 -> end:       5842 (constraint:   2042939) (change:         0)
#   step RDP_PARTMGR : L_X0_Y3 - start:          0 -> end:          0 (constraint:   2043000) (change:         0)
#   step RDP : Partition Cost Metric
+---------+---------------+----------------+------------------+
| Fpgalet | Pin Cost / (%)| Area Cost / (%)| Target Offset (%)|
+---------+---------------+----------------+------------------+
|part_SLR0|       0 / 0.00|     4003 / 0.15|             25.00|
|part_SLR1| 243590 / 91.54| 2538489 / 93.07|             25.00|
|part_SLR2|   22500 / 8.46|   185139 / 6.79|             25.00|
|part_SLR3|       0 / 0.00|        0 / 0.00|             25.00|
+---------+---------------+----------------+------------------+
|    Total|   266090 / 100|   2727631 / 100|              100 |
+---------+---------------+----------------+------------------+


#   step RDP_DM : Sanity check.....
#   step RDP : Done in       elapsed:2 s      user:4 s   system:0.24 s     %cpu:153.86       load:2.47       fm:854023 m    vm:12459 m      vm:+89 m    um:11640 m      um:+89 m
#   step RDP_DM : Report cut size table
+-------------+-----------------------+-------------+----------------+-----------+
| Boundary Id |      fpgalet - fpgalet| PDMable Cut | NonPDMable Cut | Total Cut |
+-------------+-----------------------+-------------+----------------+-----------+
|           0 | part_SLR0 - part_SLR1 |           0 |              0 |         0 |
|           1 | part_SLR1 - part_SLR2 |        4414 |              0 |      4414 |
|           2 | part_SLR2 - part_SLR3 |           0 |              0 |         0 |
+-------------+-----------------------+-------------+----------------+-----------+


#   step RDP_DM : 
# +---------+-------------+------------+------+----+-------------+-----+-----------+----------+-----------+------------+-------------+--------------+--------------+---------------+------------+------------------+-------------------+------------+-------+------+-----+
# |  Fpgalet|          LUT|        LUT6|   RAM|URAM|          REG|  DSP|     RAMLUT|FWC_IP_NUM|FWC_IP_BITS|QIWC_IP_BITS|READ_PORT_IPS|READ_PORT_BITS|WRITE_PORT_IPS|WRITE_PORT_BITS|ZC_TRACE_BIT|ZCEI_MESSAGE_INPUT|ZCEI_MESSAGE_OUTPUT|FW_RESOURCES|ZPRD_BB|ZFORCE|ZVIEW|
# +---------+-------------+------------+------+----+-------------+-----+-----------+----------+-----------+------------+-------------+--------------+--------------+---------------+------------+------------------+-------------------+------------+-------+------+-----+
# |part_SLR0|    0/1021504|   0/1021500| 0/485|0/64|  278/2043000|0/816|   0/129000|     0/186|    0/71424|    0/235929|          0/0|           0/1|           0/0|            0/1|         0/0|             0/150|              0/150|         0/0|    0/1|   0/0|  0/1|
# |part_SLR1|39334/1021504|2556/1021500|12/485|0/64|35353/2043000|2/816|4660/129000|     1/186|    1/71424|    6/235929|          0/0|           0/1|           0/0|            0/1|         0/0|             8/150|              7/150|         0/0|    0/1|   0/0|  0/1|
# |part_SLR2| 1026/1021504|  28/1021500| 2/452|0/64| 5902/2043000|0/795|   8/129000|     0/186|    0/71424|    2/235929|          0/0|           0/1|           0/0|            0/1|         0/0|             0/150|              0/150|         0/0|    0/1|   0/0|  0/1|
# |part_SLR3|    0/1021504|   0/1021500| 0/485|0/64|    0/2043000|0/816|   0/129000|     0/186|    0/71424|    0/235929|          0/0|           0/1|           0/0|            0/1|         0/0|             0/150|              0/150|         0/0|    0/1|   0/0|  0/1|
# +---------+-------------+------------+------+----+-------------+-----+-----------+----------+-----------+------------+-------------+--------------+--------------+---------------+------------+------------------+-------------------+------------+-------+------+-----+
# |      SUM|        40359|        2584|    14|   0|        41533|    2|       4668|         1|          1|           8|            0|             0|             0|              0|           0|                 8|                  7|           0|      0|     0|    0|
# +---------+-------------+------------+------+----+-------------+-----+-----------+----------+-----------+------------+-------------+--------------+--------------+---------------+------------+------------------+-------------------+------------+-------+------+-----+
#   step RDP_DM : Report resource usage from QIWC_IP_BITS
#   step RDP_DM : 
# +---------+---------+---------+-----+----+---------+-----+--------+----------+-----------+------------+-------------+--------------+--------------+---------------+------------+------------------+-------------------+------------+-------+------+-----+
# |  Fpgalet|      LUT|     LUT6|  RAM|URAM|      REG|  DSP|  RAMLUT|FWC_IP_NUM|FWC_IP_BITS|QIWC_IP_BITS|READ_PORT_IPS|READ_PORT_BITS|WRITE_PORT_IPS|WRITE_PORT_BITS|ZC_TRACE_BIT|ZCEI_MESSAGE_INPUT|ZCEI_MESSAGE_OUTPUT|FW_RESOURCES|ZPRD_BB|ZFORCE|ZVIEW|
# +---------+---------+---------+-----+----+---------+-----+--------+----------+-----------+------------+-------------+--------------+--------------+---------------+------------+------------------+-------------------+------------+-------+------+-----+
# |part_SLR0|0/1021504|0/1021500|0/485|0/64|0/2043000|0/816|0/129000|     0/186|    0/71424|    0/235929|          0/0|           0/1|           0/0|            0/1|         0/0|             0/150|              0/150|         0/0|    0/1|   0/0|  0/1|
# |part_SLR1|2/1021504|2/1021500|4/485|0/64|1/2043000|0/816|0/129000|     0/186|    0/71424|    6/235929|          0/0|           0/1|           0/0|            0/1|         0/0|             0/150|              0/150|         0/0|    0/1|   0/0|  0/1|
# |part_SLR2|1/1021504|1/1021500|2/452|0/64|0/2043000|0/795|0/129000|     0/186|    0/71424|    2/235929|          0/0|           0/1|           0/0|            0/1|         0/0|             0/150|              0/150|         0/0|    0/1|   0/0|  0/1|
# |part_SLR3|0/1021504|0/1021500|0/485|0/64|0/2043000|0/816|0/129000|     0/186|    0/71424|    0/235929|          0/0|           0/1|           0/0|            0/1|         0/0|             0/150|              0/150|         0/0|    0/1|   0/0|  0/1|
# +---------+---------+---------+-----+----+---------+-----+--------+----------+-----------+------------+-------------+--------------+--------------+---------------+------------+------------------+-------------------+------------+-------+------+-----+
# |      SUM|        3|        3|    6|   0|        1|    0|       0|         0|          0|           8|            0|             0|             0|              0|           0|                 0|                  0|           0|      0|     0|    0|
# +---------+---------+---------+-----+----+---------+-----+--------+----------+-----------+------------+-------------+--------------+--------------+---------------+------------+------------------+-------------------+------------+-------+------+-----+
#   step RDP_DM : Report resource usage from FWC_IP_NUM
#   step RDP_DM : 
# +---------+---------+---------+-----+----+---------+-----+--------+----------+-----------+------------+-------------+--------------+--------------+---------------+------------+------------------+-------------------+------------+-------+------+-----+
# |  Fpgalet|      LUT|     LUT6|  RAM|URAM|      REG|  DSP|  RAMLUT|FWC_IP_NUM|FWC_IP_BITS|QIWC_IP_BITS|READ_PORT_IPS|READ_PORT_BITS|WRITE_PORT_IPS|WRITE_PORT_BITS|ZC_TRACE_BIT|ZCEI_MESSAGE_INPUT|ZCEI_MESSAGE_OUTPUT|FW_RESOURCES|ZPRD_BB|ZFORCE|ZVIEW|
# +---------+---------+---------+-----+----+---------+-----+--------+----------+-----------+------------+-------------+--------------+--------------+---------------+------------+------------------+-------------------+------------+-------+------+-----+
# |part_SLR0|0/1021504|0/1021500|0/485|0/64|0/2043000|0/816|0/129000|     0/186|    0/71424|    0/235929|          0/0|           0/1|           0/0|            0/1|         0/0|             0/150|              0/150|         0/0|    0/1|   0/0|  0/1|
# |part_SLR1|0/1021504|0/1021500|0/485|0/64|0/2043000|0/816|0/129000|     0/186|    0/71424|    0/235929|          0/0|           0/1|           0/0|            0/1|         0/0|             0/150|              0/150|         0/0|    0/1|   0/0|  0/1|
# |part_SLR2|0/1021504|0/1021500|0/452|0/64|0/2043000|0/795|0/129000|     0/186|    0/71424|    0/235929|          0/0|           0/1|           0/0|            0/1|         0/0|             0/150|              0/150|         0/0|    0/1|   0/0|  0/1|
# |part_SLR3|0/1021504|0/1021500|0/485|0/64|0/2043000|0/816|0/129000|     0/186|    0/71424|    0/235929|          0/0|           0/1|           0/0|            0/1|         0/0|             0/150|              0/150|         0/0|    0/1|   0/0|  0/1|
# +---------+---------+---------+-----+----+---------+-----+--------+----------+-----------+------------+-------------+--------------+--------------+---------------+------------+------------------+-------------------+------------+-------+------+-----+
# |      SUM|        0|        0|    0|   0|        0|    0|       0|         0|          0|           0|            0|             0|             0|              0|           0|                 0|                  0|           0|      0|     0|    0|
# +---------+---------+---------+-----+----+---------+-----+--------+----------+-----------+------------+-------------+--------------+--------------+---------------+------------+------------------+-------------------+------------+-------+------+-----+
#   step run_partitioning : Done in       elapsed:3 s      user:4 s   system:0.27 s     %cpu:145.79       load:2.47       fm:853986 m    vm:12459 m     vm:+232 m    um:11640 m     um:+231 m
#   step ZDO_TIMER : zdoDM Memory: 139323780 B
#   step decisionMaking : Done in      elapsed:14 s     user:15 s   system:0.41 s     %cpu:114.33       load:2.47       fm:853913 m    vm:12459 m     vm:+522 m    um:11639 m     um:+527 m
#   step dieBuildDB : ZDO::SolutionMgr mem: 12589045 B
#   step dieBuildDB : doSplitNetlist:off ; doPblockConstraints:off ; doReplication:off ; doMDTMXinsertion:off ; doClockOpt:off ; doDataOpt:off ; doAnnotateLoc:off
#   step netlistModification : Starting
#   step netlistModification : Done in       elapsed:0 s      user:0 s      system:0 s       %cpu:0.00       load:2.47       fm:853913 m    vm:12459 m       vm:+0 m    um:11639 m       um:+0 m
#   step postProcess : Starting
#   step postProcess : Done in       elapsed:0 s      user:0 s      system:0 s       %cpu:0.00       load:2.47       fm:853913 m    vm:12459 m       vm:+0 m    um:11639 m       um:+0 m
