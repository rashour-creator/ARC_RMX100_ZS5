############################################
################## PROCESS #################
############################################
$nbProcess = 1;
$Process_0 = "default_process";

############################################
################## SYSTEM CLOCKS ###########
############################################

######## System frequency declaration (MHz) ########
$idelClk.Frequency = 200000;
$smapClk.Frequency = 50000;

############################################
################## CLOCKS ##################
############################################

######## driverClk declaration (kHz) ########
# Note :  driverClk <= $sysFrequency/2
# Note : if $driverClk.Frequency not defined, will use default setting (maximun supported)
# $driverClk.Frequency = 1315;
# $driverClk.MaxFrequency = 1344;
# Note : Or use predifined modes "default", "safe" or "ultraSafe"
# $timingSetting = "my_setting";
# Note : apply addtional ratio on top of what my_setting defines
# $timingSettingRation = my_ratio;
# Note : number of driverClock cycles while reset is active
$driverClk.Reset = 0;
# Note : for no automatic frequency change during FWC set $driverClk.FwcsFrequency = "driverClk.Frequency";

######## New clocks declaration ########
# This allows you to create a dummy clock (useful for Tracking/Monitoring over sampling)
# Note : only 16 clocks are available (including your design clocks)
# $newClock = "U0.M0.dummy_clock";
#     - No new clock detected -

######## User clocks parameters declaration (kHz) ########
# This allows you to define your groups parameters
# $U0.M0.myGroup.Tolerance = "no | yes";
# $U0.M0.myGroup.TimeStampGroup = "no | yes";
#
# This allows you to define your clocks parameters and link clocks in a same group
# Note : "my_realFreq" is a float kHz value
# Note : "my_virtFreq" is a decimal kHz value
# Note : "my_group" is "myGroup" by default
# $U0.M0.my_clock.Waveform = "_-";
# $U0.M0.my_clock.Mode = "controlled | delay-controlled";
# $U0.M0.my_clock.Frequency = my_realFreq;
# $U0.M0.my_clock.VirtualFrequency = my_virtFreq;
# $U0.M0.my_clock.GroupName = "my_group";
# $U0.M0.my_clock.Tolerance = "no | yes";
#
# Your current clocks parameters are :
#     -0- zebu_top.ref_clk
#`if (`ZEBU_VERSION == `ZEBU_BOX_ZEBU_VERSION_ZS4)
#$U0.M0.RefGroup.TimeStampGroup = "yes";
#`endif
#$U0.M0.zebu_top.ref_clk.Waveform = "_-";
#$U0.M0.zebu_top.ref_clk.Mode = "controlled";
#$U0.M0.zebu_top.ref_clk.VirtualFrequency = 1;
#$U0.M0.zebu_top.ref_clk.GroupName = "RefGroup";
#$U0.M0.zebu_top.ref_clk.Tolerance = "no";
##     -1- zebu_top.jtag_tck
#`if (`ZEBU_VERSION == `ZEBU_BOX_ZEBU_VERSION_ZS4)
#$U0.M0.JtagGroup.TimeStampGroup = "no";
#`endif
#$U0.M0.zebu_top.zebuclk_jtag_clk.Waveform = "_-";
#$U0.M0.zebu_top.zebuclk_jtag_clk.Mode = "controlled";
#$U0.M0.zebu_top.zebuclk_jtag_clk.VirtualFrequency = 1;
#$U0.M0.zebu_top.zebuclk_jtag_clk.GroupName = "JtagGroup";
#$U0.M0.zebu_top.zebuclk_jtag_clk.Tolerance = "no";
#`if (`ZEBU_HAS_UART)
##     -2- zebu_top.uart_sclk
#`if (`ZEBU_VERSION == `ZEBU_BOX_ZEBU_VERSION_ZS4)
#$U0.M0.UartGroup.TimeStampGroup = "no";
#`endif
#$U0.M0.zebu_top.zebuclk_uart_sclk.Waveform = "_-";
#$U0.M0.zebu_top.zebuclk_uart_sclk.Mode = "controlled";
#$U0.M0.zebu_top.zebuclk_uart_sclk.VirtualFrequency = 1;
#$U0.M0.zebu_top.zebuclk_uart_sclk.GroupName = "UartGroup";
#$U0.M0.zebu_top.zebuclk_uart_sclk.Tolerance = "no";
#`endif

$zebu_top.zebuclk_ref_clk.Mode   = "clock-delay-port";
$zebu_top.zebuclk_ref_clk.DutyLo = 500;
$zebu_top.zebuclk_ref_clk.DutyHi = 500;
$zebu_top.zebuclk_ref_clk.Phase  = 0;
$zebu_top.zebuclk_ref_clk.DelayUnit  = "ps";

$zebu_top.zebuclk_jtag_clk.Mode   = "clock-delay-port";
$zebu_top.zebuclk_jtag_clk.DutyLo = 500;
$zebu_top.zebuclk_jtag_clk.DutyHi = 500;
$zebu_top.zebuclk_jtag_clk.Phase  = 0;
$zebu_top.zebuclk_jtag_clk.DelayUnit  = "ps";

$zebu_top.zebuclk_uart_sclk.Mode   = "clock-delay-port";
$zebu_top.zebuclk_uart_sclk.DutyLo = 500;
$zebu_top.zebuclk_uart_sclk.DutyHi = 500;
$zebu_top.zebuclk_uart_sclk.Phase  = 0;
$zebu_top.zebuclk_uart_sclk.DelayUnit  = "ps";

######## User clocks file declaration ########
# This allows you to define clocks parameters in separate files
# $U0.M0.my_clock.File = "my_clock_file";

######## zClockSkew declaration ########
# This allows you to delay the selected clock Skew by "my_zClockSkewTime" nanoseconds.
# Note : 0x00 <= clockMask <= 0xFFFF
# $zClockSkewSel = "driverClk | allUserClk | userClkMask=clockMask";
# $zClockSkewTime = my_zClockSkewTime;
#
# Note : Your current zClockSkew is :
# $zClockSkewSel = "driverClk";
# $zClockSkewTime = 80;

######## zClockFilter declaration ########
# This allows you to delay the selected clock Filter by "my_zClockFilterTime" nanoseconds.
# Note : 0x00 <= clockMask <= 0xFFFF
# $zClockFilterSel = "driverClk | allUserClk | userClkMask=clockMask";
# $zClockFilterTime = my_zClockFilterTime;
#
# Note : Your current zClockFilter is :
# $zClockFilterSel = "driverClk";
# $zClockFilterTime = 40;

############################################
################# MEMORIES #################
############################################

######## Initialization memory file declaration ########
# $memoryInitDB = "my_file";
# $zrmTransactionalMode = #0/1;

######## Memories Frequency declaration in kHz ########
# $ddr.frequency = #value;
# $ddrTrace.frequency = #value;

############################################
################# REGISTERS #################
############################################

######## Initialization register file declaration ########
# $registerInitDB = "my_file";

############################################
################# PLUSARGS #################
############################################

######## Initialization plusargs file declaration ########
# $plusargs_file = "my_file";

###########################################
########### rtlClock Tolerance ###########
###########################################
# $rtlClockToleranceValue = 0;

